<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web | 稀有猿诉]]></title>
  <link href="http://toughcoder.net/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://toughcoder.net/"/>
  <updated>2015-05-22T00:06:25+08:00</updated>
  <id>http://toughcoder.net/</id>
  <author>
    <name><![CDATA[Alex Hilton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CSS Animation初探]]></title>
    <link href="http://toughcoder.net/blog/2015/05/04/introduction-to-css-animation/"/>
    <updated>2015-05-04T23:47:21+08:00</updated>
    <id>http://toughcoder.net/blog/2015/05/04/introduction-to-css-animation</id>
    <content type="html"><![CDATA[<p>动画在交互设计中是一个十分能加分的东西，用以平滑过度，会让用户体验上几个台阶。对于Web开发也是如此，恰当的使用动画可以让网页使用起来更加的用户友好。这里就来探讨一下CSS中一些动画的实现方式，初识前端，不足之处敬请指正。</p>

<p><a href=""><img src="http://cssanimation.net/wp-content/uploads/2013/01/css3animation-banner.jpg" title="auto auto" ></a></p>

<!-- more -->


<h2>使用transition来实现动画</h2>

<p><a href="http://www.w3schools.com/css/css3_transitions.asp">transition</a>是CSS3中的属性，它的作用就是让CSS的属性以平滑的渐变动画方式来展现而非突然变化，因此可以用来实现一些简单动画。</p>

<p>语法：transition: property duration timing-function delay</p>

<table>
<thead>
<tr>
<th>Value               </th>
<th> Description </th>
</tr>
</thead>
<tbody>
<tr>
<td>property            </td>
<td> 要平滑过度的CSS属性</td>
</tr>
<tr>
<td>duration            </td>
<td> 平滑过度的时长（动画时长）</td>
</tr>
<tr>
<td>timing-function     </td>
<td> 定义过度效果的速度曲线</td>
</tr>
<tr>
<td>delay               </td>
<td> 过度效果何时开始</td>
</tr>
</tbody>
</table>


<p>像其他的CSS写法一样，这四个值也可以单独指定：</p>

<ul>
<li> transition-property</li>
<li> transition-duration</li>
<li> transition-timing</li>
<li> transition-delay</li>
</ul>


<h3>transition的特点</h3>

<ul>
<li> 每当有transtion所指定的属性发生变化时，动画就会被触发，当然也受transition-delay的控制</li>
<li> transition生效的前提是元素在DOM中，所以对于属性display: none之类的是不会起作用的</li>
</ul>


<p>更多关于transition的使用请参考<a href="https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions">这篇文章</a>，相当的详细。</p>

<h2>使用transform来实现动画</h2>

<p><a href="http://www.w3schools.com/cssref/css3_pr_transform.asp">transform</a>是CSS3中新加的属性，用以对元素进行2D或3D的变换，这里变换的意思是几何变换，包括旋转，缩放，移动和倾斜旋转等。</p>

<ul>
<li> translate，translate3d, translateX, translateY, translateZ</li>
<li> rotate, rotate3d, rotateX, rotateY, rotateZ</li>
<li> scale, scale3d, scaleX, scaleY, scaleZ</li>
<li> skew, skewX, skewY</li>
</ul>


<p>用这些来指定是进行什么变换，就像名字所指的，translate是进行2D移动，如translate(10, 11)，translate3d是进行3d移动, 如translate3d(1, 0, 10)，后面带坐标轴就是在某一特定方向上移动，其他几个类似。</p>

<p>需要注意几点：</p>

<ul>
<li> transform只能定义几何变换，不能进行其他的，比如颜色，背景，透明度等非几何属性</li>
<li><p> 指定了transform会立即发生，所以要配合transition一起来使用
 用transition来为transform指定时长，变化曲线以及delay的等关键的动画参数，才能成为真正的动画，否则transform也不会有动画效果。如：</p>

<pre><code class="`css"> transform: translate3d(10, 20, 30);
 transition: transform 300 ease-in;
</code></pre></li>
<li> translate移动的距离是相对于没有transform时的位置
 比如说某元素原来位置是100， 100, 那么translate(10, 10)，后的位置是110, 110，接着再translate(-10, -10)，后位置是90, 90.</li>
<li> 还有就是对于translate最好使用translate3d，尽管可能只是一维的移动，translate3d要更平滑一些。</li>
</ul>


<h2>使用key-frame来实现动画</h2>

<p><a href="http://www.w3schools.com/cssref/css3_pr_animation-keyframes.asp">@keyframe</a>规则是专门用来做动画的，它可以指定具体到某一帧的状态是什么样子的，以整数百分比来指定帧数，再给定CSS属性，就组成了一组状态的变化。比如：</p>

<pre><code class="css">@keyframes mymove {
    0%   {top: 0px;}
    25%  {top: 200px;}
    50%  {top: 100px;}
    75%  {top: 200px;}
    100% {top: 0px;}
}
</code></pre>

<p>就是一个简单的移动动画。
具体的可以参考<a href="http://www.smashingmagazine.com/2011/05/17/an-introduction-to-css3-keyframe-animations/">这篇文章</a>，讲述的还是很清楚的。</p>

<h2>如何选择</h2>

<p>一般来说，如果是移动，旋转或者缩放就使用transform就够了。如果要变化颜色，或者背景色或者可见度，就使用transition就好了。如果是复杂的动画，比如控制多个元素同时做动画，或者动画本身比较复杂还是使用@keyframes。</p>

<h2>流行的动画库</h2>

<p><a href="http://codegeekz.com/css-effect-libraries-creating-beautiful-animations/">这个文章</a>列的很详细，就不再单独的列出来了。如果你知道有其他的库也请与我分享。</p>

<h2>一些不错的资源和网站</h2>

<ul>
<li> <a href="http://www.css3maker.com/index.html">CSS3 Maker</a></li>
<li> <a href="https://css-tricks.com/">CSS tricks</a></li>
<li> <a href="http://caniuse.com/">Can I Use</a></li>
</ul>


<h2>参考</h2>

<ul>
<li> <a href="http://www.smashingmagazine.com/2011/05/17/an-introduction-to-css3-keyframe-animations/">An Introduction To CSS3 Keyframe Animations</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
