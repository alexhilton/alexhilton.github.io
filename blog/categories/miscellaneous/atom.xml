<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Miscellaneous | 稀有猿诉]]></title>
  <link href="http://toughcoder.net/blog/categories/miscellaneous/atom.xml" rel="self"/>
  <link href="http://toughcoder.net/"/>
  <updated>2022-12-31T20:11:24+08:00</updated>
  <id>http://toughcoder.net/</id>
  <author>
    <name><![CDATA[Alex Hilton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MarkDown之数学公式]]></title>
    <link href="http://toughcoder.net/blog/2022/07/13/math-symbols-in-markdown-made-easy/"/>
    <updated>2022-07-13T21:35:58+08:00</updated>
    <id>http://toughcoder.net/blog/2022/07/13/math-symbols-in-markdown-made-easy</id>
    <content type="html"><![CDATA[<p>有时候文档里面会涉及一些数学公式，用常规的格式都难以得到满意的效果。</p>

<p>数学公式方面<a href="https://www.latex-project.org/">Latex</a>是最为专业的，Markdown也是支持Latex的。</p>

<p><a href=""><img src="https://img95.699pic.com/photo/40176/0613.gif_wh860.gif" title="auto auto" ></a></p>

<!-- more -->


<h2>在公式中加入空格</h2>

<p>可以参考 这几个文章:</p>

<ol>
<li><a href="https://www.overleaf.com/learn/latex/Spacing_in_math_mode">Spacing in math mode</a></li>
<li><a href="https://latex-tutorial.com/latex-space/">LaTeX Space Guide: vertical, horizontal, text and math modes, and much more!</a></li>
<li><a href="https://www.overleaf.com/learn/latex/Articles/How_to_change_paragraph_spacing_in_LaTeX">How to change paragraph spacing in LaTeX</a></li>
</ol>


<h2>各种Markdown编辑器的支持情况</h2>

<h3>LeetCode题解</h3>

<p>它是直接支持的，用\$\$来标识就好了。用双\$\$\$\$来居中。</p>

<p>比如$\vec{AB}$就是一个向量。</p>

<h3>MacDown编辑器</h3>

<p>不支持Latex，但支持<a href="https://en.wikipedia.org/wiki/TeX">TeX</a>和<a href="https://en.wikipedia.org/wiki/MathML">MathML</a></p>

<p>A_s<sup>T</sup> = B</p>

<h3>Octopress</h3>

<p>Latex和MathML貌似都不支持。如果要支持，可以引入三方插件。</p>

<h2>参考资料</h2>

<ul>
<li><a href="https://www.jianshu.com/p/4460692eece4">Markdown 数学公式语法</a></li>
<li><a href="https://blog.csdn.net/jyfu2_12/article/details/79207643">markdown最全数学公式速查</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/158156773">一篇文章教会你如何在Markdown文档中插入数学公式</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/441454622">MarkDown数学公式</a></li>
<li><a href="https://www.latexlive.com/home">LaTeX公式编辑器ver1.6.</a></li>
<li><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac画图工具]]></title>
    <link href="http://toughcoder.net/blog/2022/04/01/diagrams-drawing-made-easy/"/>
    <updated>2022-04-01T23:30:44+08:00</updated>
    <id>http://toughcoder.net/blog/2022/04/01/diagrams-drawing-made-easy</id>
    <content type="html"><![CDATA[<p>在平时开发中，经常需要画各种图形，比如流程图，架构图和UML图等等。找到一个好用且高效的工具能事半功倍，现在就来总结一下在Mac上面有哪些好用的画图工具。</p>

<p><a href=""><img src="https://www.pcwdld.com/wp-content/uploads/Cade-Network-diagramming-tool.jpg" title="auto auto" ></a></p>

<!-- more -->


<h2>厘清需求</h2>

<p>还是要先厘清需求明确问题。需求也比较明确，最好是免费，用户友好，支持导出各种图片格式，能支持常见的各种图形，如流程图，架构图和UML图等。</p>

<h2>桌面软件</h2>

<p>桌面软件大部分都是付费的，但也有一些是免费的，以下的值得尝试，这些都是专业公司开发的，在功能，易用性和稳定性上面要好一些。</p>

<table>
<thead>
<tr>
<th> &nbsp;&nbsp;&nbsp;&nbsp;Name&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;付费情况&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下载安装&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;支持平台&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th> &nbsp;&nbsp;&nbsp;&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp; </th>
</tr>
</thead>
<tbody>
<tr>
<td> <a href="https://www.nchsoftware.com/chart/index.html?ref=cj&amp;cjevent=27d37b109b8711eb808b01840a180511">ClickCharts</a> </td>
<td style="text-align:center;"> 基础版本免费 </td>
<td style="text-align:center;"> <a href="https://www.nchsoftware.com/chart/clickchartspmaci.zip">网站下载</a> </td>
<td style="text-align:center;"> Windows<br/>Mac<br/>Android </td>
<td> 界面接近Visio<br/>功能比较齐全 </td>
</tr>
<tr>
<td> <a href="http://pencil.evolus.vn/">Pencil</a> </td>
<td style="text-align:center;"> 开源且免费 </td>
<td style="text-align:center;"> <a href="http://pencil.evolus.vn/dl/V3.1.0.ga/Pencil-3.1.0.ga.dmg">网站下载</a> </td>
<td style="text-align:center;"> Windows<br/>Mac<br/>Linux </td>
<td> 是一款开源软件，免费使用<br/>不好的地方是文档较少 </td>
</tr>
</tbody>
</table>


<h2>在线工具</h2>

<p>除了桌面软件以外，还有很多在线的图形工具，非常的好用。随着Browser性能越来越强，现在Web端的体验也是相当的好，可以优先选择Web端。</p>

<h3><a href="https://app.diagrams.net/">Draw.io</a></h3>

<p>这个相当有名气，用的也比较广泛，一般来讲能够满足日常需求。</p>

<h3>基于JavaScript的图形库</h3>

<p>还有很多用JavaScript实现的图表库也相当的棒，有在线的编辑工具，并且很多都支持语法脚本，支持云存储，也支持把结果以图片形式下载到本地，非常的实用。</p>

<table>
<thead>
<tr>
<th> Name </th>
<th style="text-align:center;">  &nbsp;&nbsp;&nbsp;&nbsp;在线编辑工具&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th> &nbsp;&nbsp;&nbsp;&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp; </th>
</tr>
</thead>
<tbody>
<tr>
<td> <a href="https://mermaid-js.github.io/mermaid/#/">mermaid</a> </td>
<td style="text-align:center;"> <a href="https://mermaid.live/edit#pako:eNpVkM-KwkAMxl8l5OSCfYEeBG3Vi6Cgt46H0InOIPOHdMoibd99p5aF3ZyS7_t9IWTANmjGEp9C0cCtVh5ybZvKiO2So-4ORbEZj5zABc_vEXarY4DOhBitf34t_G6GoBpOM8aQjPWvabGqT_7seYS6OVFMId7_OrfvMMK-sReT1_93jHBOHZoHlQ8qWhKoSD4IrtGxOLI6nz7MisJk2LHCMrea5KVQ-SlzfdSUeK9tCoJlkp7XSH0K17dvf-eFqS3lL7hFnH4ABg5bBA">mermaid live</a> </td>
<td> </td>
</tr>
<tr>
<td> <a href="https://bramp.github.io/js-sequence-diagrams/">js-sequence-diagrams</a></td>
<td style="text-align:center;"> </td>
<td></td>
</tr>
<tr>
<td> <a href="http://flowchart.js.org/">flowchatjs</a> </td>
<td style="text-align:center;"> </td>
<td></td>
</tr>
</tbody>
</table>


<p><br/>
更多的在线工具可以参考<a href="http://toughcoder.net/blog/2022/03/28/blog-image-bed-made-easy/">前一篇文章</a>。</p>

<h2>参考资料</h2>

<ul>
<li><a href="https://www.makeuseof.com/tag/free-flowchart-makers-mac/">The 7 Best Free Mac Flowchart Makers for Quick and Easy Diagrams</a></li>
<li><a href="https://www.softwaretestinghelp.com/flowchart-software/">10 Best Free Flowchart Software For Windows And Mac</a></li>
<li><a href="https://machow2.com/flowcharts-for-mac-the-best-software/">10 Best Flowchart Software of 2022 For Pros</a></li>
<li><a href="https://zapier.com/blog/flowchart-diagramming-software/">The best flowchart software and diagram tools in 2022</a></li>
<li><a href="https://www.techrepublic.com/article/five-free-web-based-tools-that-make-diagramming-a-snap/">Five free web-based tools that make diagramming a snap</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[博客图形图像解决办法]]></title>
    <link href="http://toughcoder.net/blog/2022/03/28/blog-image-bed-made-easy/"/>
    <updated>2022-03-28T20:46:51+08:00</updated>
    <id>http://toughcoder.net/blog/2022/03/28/blog-image-bed-made-easy</id>
    <content type="html"><![CDATA[<p>一个好的博客必须要图文并茂，但图片是一个大问题，用GitHub pages搭建的博客最为蛋疼的就是图床问题，被图床问题困扰了很久，需要花点时间好好的解决一下子了。</p>

<p><a href=""><img src="https://cdn.writermag.com/2016/12/blogs-versus-articles.jpg" title="auto auto" ></a></p>

<!-- more -->


<h2>图片始终是痛点</h2>

<p>曾经用过七牛，免额满了后就没有再用了。</p>

<p>后来用微博，但后来微博不允许外链了，不但不能再用了，之前存在微博的图片也都无法访问了。</p>

<p>免费的图床也一直都有，但都不长久，这东西很难盈利，运营不过多久就会关了，还要再找新的。一个字就是蛋疼。</p>

<h2>厘清需求</h2>

<p>要想解决问题，需要先把问题澄清，问题源于图片需求。</p>

<ul>
<li>非原创性图片，用于splash，或者说明和阐述一些细节的</li>
<li>原创图片，手动画的一些图片</li>
<li>截屏，手机截屏，或者电脑屏幕截图，用于展示过程说明或者运行结果</li>
<li>原创图形，如流程图，结构图，架构图，设计图或者UML图</li>
</ul>


<p>在博客中使用的图形与图像，就是以上四种。</p>

<h2>如何解决问题</h2>

<p>针对 不同的需求用不同的解法。</p>

<h3>非原创性图片用链接</h3>

<p>对于非原创性图片，尽可能的在网络上搜索，使用网络图片，这是最为省事的。</p>

<p>搜索的时候要注意：</p>

<ol>
<li>尽是用<a href="https://cn.bing.com/">Bing</a>来搜索</li>
<li>图片不能被墙，要都能访问的</li>
<li>注意版权，别侵权</li>
</ol>


<h3>原创性图片和截屏找图床</h3>

<p>没办法，这个只能找图床来解决了。后面再单独拿出来说。</p>

<h3>原创图形用画图库</h3>

<p>对于一些原创性的图形，要寻找画图库来解决，就是那种内嵌在网页里面的，用脚本或者源码去画图的图形库。后面单独说。</p>

<h2>痛点治疗方案</h2>

<p>通过上面来分析，如何找到图床和画图库，就成解决痛点的关键。</p>

<h3>图床用<a href="https://postimages.org/">postimages</a></h3>

<p>看似绕来绕去，仍还是需要寻找图床。但其实还是不一样，通过上面分析，发现仅有少量的原创图片和截屏需要图床，所以整体量并不大。用GitHub就可以了，空间是够的不是问题，问题就在于稳定性，毕竟访问GitHub经常抽风（不是GitHub server本身抽风，而是网络抽风），另外就是CDN加速。即使GitHub能正常访问，但是还是太慢了，对于常规的push/pull还好，但图片肯定会明显感觉到很慢，必须寻找CDN加速方法。</p>

<ul>
<li>新建一个repo，专门用于博客图床</li>
<li>寻找CDN加速方法</li>
</ul>


<p>网络上还真有大把的人用GitHub用作图床，方法有两种：</p>

<ol>
<li>直接在GitHub issues中上传图片，<a href="https://dev.to/adityatyagi/host-images-for-free-on-github-3d1c">这篇文章有详细讨论</a></li>
<li>创建一个repo，<a href="https://fizzy.cc/use-github-repo-to-host-images/">可以看这篇文章</a>，讲的很详细</li>
</ol>


<p>方法1非常的简单和方便，对于图片需求量不大的话，非常合适，而且它不占用repo的空间配额。目前先用方法1。如果 后面图片量确实大的话，再考虑切到方案2.</p>

<p><strong>注意</strong>：GitHub貌似做了屏蔽，不让上传图片，可能是因为上传的图片太多了，hold不住了，所以做了限制。</p>

<h3>专用图床</h3>

<p>目前发现<a href="https://postimages.org/">postimages</a>比较好用，先用这个吧。</p>

<ul>
<li><a href="https://www.bettertechtips.com/blogging/image-hosting-blog/">7 Free Image Hosting Sites to Save Your Blog Storage</a></li>
<li><a href="https://blogpros.com/blog/2016/03/host-blog-images-free">10 Reliable Websites to Host Your Blog Images for Free</a></li>
</ul>


<h3>寻找JavaScript图形库</h3>

<p>这个现成方案很多，就需要找一个合适的。</p>

<p>我们的需求是：</p>

<ol>
<li>最好是内嵌在网页中的</li>
<li>免费，毕竟需求量不是很大，偶尔才需要画图，没必要花钱</li>
<li>支持常见的图形和图表，如流程图，结构图，架构图和UML图</li>
<li>使用方式当然越简单越好</li>
</ol>


<p>可行的的方案：</p>

<ul>
<li><a href="https://modeling-languages.com/javascript-drawing-libraries-diagrams/">20+ JavaScript libraries to draw your own diagrams</a></li>
<li><a href="https://www.chartjs.org/">Chart.js</a> 这个是图表，也就是统计数据的图表（柱图饼图散列图等）。</li>
<li><a href="https://hackernoon.com/my-top-13-javascript-diagram-libraries-g2a53z6u">My Top 13 JavaScript Diagram Libraries</a></li>
<li><a href="https://ourcodeworld.com/articles/read/159/top-5-best-free-diagrams-javascript-libraries">Top 5 : Best free diagrams javascript libraries</a></li>
</ul>


<p>目前来看<a href="http://mermaid-js.github.io/mermaid/#/">mermaid</a>和<a href="http://flowchart.js.org/">FlowChart.js</a>比较符合需求，它们都可以内嵌到网页里面，且功能较强大。而mermaid的语法更简洁一些，我们可以先从mermaid开始尝试。目前最重要的事情是，如何把图形内嵌到博客中，把链路先跑通。</p>

<h3><a href="https://mermaid-js.github.io/mermaid/#/">mermaid</a></h3>

<p>语法简单，与Markdown类似，同时库比较简单，方便集成。比较符合我们的需求。就先从它开始。</p>

<p>集成方法，非常简单，先引入库，然后定义一个class=&ldquo;mermaid&#8221;的<div> tag即可。因为Markdown是支持内嵌HTML tag的，所以可以直接在Markdown中写。</p>

<p>&#8220;`html</p>

<script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>


<script>mermaid.initialize({startOnLoad:true});</script>




<div class="mermaid">
graph TD;    A&#8211;>B;    A&#8211;>C;    B&#8211;>D;    C&#8211;>D;
</div>


<p>&#8220;`</p>

<p>效果就是这样：</p>

<script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>


<script>mermaid.initialize({startOnLoad:true});</script>




<div class="mermaid">
graph TD;    A&#45;&#45;>B;    A&#45;&#45;>C;    B&#45;&#45;>D;    C&#45;&#45;>D;
</div>


<p><br/></p>

<h3>用entity解决转义问题</h3>

<p>因为Markdown以及一些静态博客框架如Jekyll或者Octopress会对一些字符进行转义，因此有些时候会造成最终结果是mermaid运行出错：Syntax error in graph</p>

<p>原因就在于一些字符被Mardown以及博客框架用作特殊用途了。因此需要转义，在mardown源码中用HTML Entity来代替被转换的字符即可。因为mermaid是JavaScript库，它是在DOM都渲染好了之后才对div tag进行处理，而HTML enity能保证在DOM中是正确的字符，又恰是在mermaid处理之前，因此可以得到符合预期的结果，而且是用Markdown编辑器预览，以及最终博客里面都能得到符合预期的结果。</p>

<p>常见的需要做转义的字符：</p>

<table>
<thead>
<tr>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;预期字符&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;HTML Entity&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th> &nbsp;&nbsp;&nbsp;&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp; </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> &#45; </td>
<td style="text-align:center;"> &amp;#45; </td>
<td> 单个&#45;不需要，当其与&gt;组合时需要  </td>
</tr>
<tr>
<td style="text-align:center;"> &lt;&lt; </td>
<td style="text-align:center;"> &amp;lt;&amp;lt; </td>
<td> 单个不需要，两个在一起就需要  </td>
</tr>
<tr>
<td style="text-align:center;"> &gt;&gt; </td>
<td style="text-align:center;"> &amp;gt;&amp;gt; </td>
<td> 单个不需要，两个在一起就需要 </td>
</tr>
</tbody>
</table>


<p><br/><br/>
这里是常见的HTML Entity参考：</p>

<ul>
<li><a href="https://www.w3schools.com/html/html_entities.asp">HTML entities</a></li>
<li><a href="https://dev.w3.org/html5/html-author/charref">HTML entities table</a></li>
<li><a href="https://www.freeformatter.com/html-entities.html">HTML Entity List</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[金州王朝已经建立，老詹可以就此退役]]></title>
    <link href="http://toughcoder.net/blog/2018/06/11/golden-state-worriors-rule/"/>
    <updated>2018-06-11T22:42:00+08:00</updated>
    <id>http://toughcoder.net/blog/2018/06/11/golden-state-worriors-rule</id>
    <content type="html"><![CDATA[<p>2017-18NBA赛季总决赛金州勇士气势如虹连胜四场横扫老詹带领的骑士，成功卫冕，同时也标志着一个赛季结束了。</p>

<p><a href=""><img src="http://pic-bucket.nosdn.127.net/photo/0005/2018-06-09/DJS3KU0Q4TM10005NOS.jpg"></a></p>

<!-- more -->


<p><img src="http://puep.qpic.cn/coral/Q3auHgzwzM4fgQ41VTF2rNfzNxVA5l6bgzBOnVGAhnIhHVhKDIXvlg/0/" alt="cahp2" /></p>

<h3>王朝的根基稳</h3>

<p>但是我们却能看到金州王朝已经悄然建立。跟前几年，特别是15-16赛季，勇士输掉的那一年相比，今年的勇士显示出了强大的实力，很多人都说由于杜兰特的加入，但是如果仅是两年前的队伍即使加一个阿杜，也不见得能赢下今年的西决和总决赛，还有最关键的是，现在的库里，汤神，格林和阿杜都已升级了：</p>

<ol>
<li>库里补齐了对抗</li>
</ol>


<p>三分还是那样的日天，但最明显的变化是突破内线能力大大增强，能把球上进，以及防守不再是漏洞。以前，特别是15-16赛季，每当三分不灵光的时候，突破很费劲，即使杀进去了，不是被帽就是没能上进。但是今年好很多，在西决的时候，以及总决赛可以看到突破进去以后球很少丢，都能得分。</p>

<p><img src="http://pic-bucket.nosdn.127.net/photo/0005/2018-06-09/DJRPKB2O4TM10005NOS.jpg" alt="Steph" />
2. 汤神还是那个汤神</p>

<p>绝境我佛显慈悲，每逢绝境汤神必发威。汤神无球像机器一样准。另外，汤神也越来越持球攻了。</p>

<p><img src="http://pic-bucket.nosdn.127.net/photo/0005/2018-06-04/DJEQ42V84TM10005NOS.jpg" alt="Klay" /></p>

<ol>
<li>格林更加成熟</li>
</ol>


<p>防守还是那样凶悍，但是更加成熟了，脾气能控制一些了。
<img src="http://pic-bucket.nosdn.127.net/photo/0005/2018-06-07/DJMJAUD64TM10005NOS.jpg" alt="draymon" /></p>

<ol>
<li>阿杜更擅长要位硬扛了</li>
</ol>


<p>外线还是保持着变态的命中率，突破也很犀利，但是杜兰特最大的变化是，每当球队遇到困难，外线手感不好时，就会到三秒区外维要位，然后背身打，像传统的大前锋那样进攻，由于身高优势，脚步灵活，投篮技术好，所以成功率特别高，单打基本通吃，夹击时可以选择分球。与传统大前锋：邓肯，加内特，诺维茨基等很像。这个是很重要的，因为你外线手感不可能一直好，突破由于防守也不可能总有机会，当你一切的惯用得分手段都没有效果时，内线强打往往是得分的手段。所以，成功的球队，必须要有一个像邓肯和KG那样，能在内线要位强打的球员。而目前KD做的比以前好太多了。而像火箭，为什么G7会输，三分27中0,问题不大，问题在于，你三分手感不好的时候没有一个稳定的得分点了，假如有邓肯，加内特，能内线要位背身强打的球员在，就可以让他人来打，起码能保证分差不被拉大。
<img src="http://pic-bucket.nosdn.127.net/photo/0005/2018-06-09/DJRN39IF4TM10005NOS.jpg" alt="KD" /></p>

<h3>健康是最大的敌人</h3>

<p>四大天王，都处在职业的巅峰时期，而且他们化学反应很好，格林擅长防守和助攻，KD和汤神可以无球，所以，他们不会有球权的冲突。并不是所有的球星组合最后都能成功，就好比今年的雷霆，安东尼，乔治以及威少，哪个不是全明星级别的，甚至更高，但是常规赛战线不佳 ，首轮更是被浓眉哥横扫。球星在一起，一个必要条件是每个人必须要无私，要出让球权，要有擅长防守的，以及擅长无球，还要有内线强打的。所以，你看当年凯尔特人三巨头KG，皮皮和雷阿伦，组合一年就能夺冠。勇士目前来看至少球星之间可以完好共存，就差钱了，但这不是大问题，以勇士管理层的水平，不会轻易让王朝结束，通过合理运作，解决好薪资帽，至少未来三年内，勇士都是总冠军的强有力争夺者，最重要的是球员和教练都要保持健康。</p>

<p><img src="http://pic-bucket.nosdn.127.net/photo/0005/2018-06-09/DJRVEP224TM10005NOS.jpg" alt="big4" /></p>

<p>怀念一下我凯三老，他们是输给了时间，如果可以年轻三岁，他们还能再拿两冠，三老老去，也毁了隆指导和帕金斯。</p>

<p><img src="http://i1.hoopchina.com.cn/u/1107/05/091/4157091/960f1526.jpg" alt="big3" /></p>

<h3>老詹靠运气，但也不易</h3>

<p>再说说骑士和老詹，今年的骑士也是非常的不顺当，常规赛战绩平平，经过多次交易换人，最终以东部第四进入季后赛，第一轮很惊险与步行者大战七场，最终凭着老詹的最后一口气成功晋级。然后就遇到了不争气的猛龙，常规赛东部冠军啊，哪怕你赢个一场两场的也行啊，最正常的结局应该是猛龙4：2干掉骑士，但是，人有时候要信命，德罗赞和洛瑞可能没去拜佛，竟然被老詹一口气横扫回家了，四场打的一场比一场差，最后气势都没有了就回家钓鱼去了。所以，还是像上面讲的，一个没有内线强打的球队，光靠所谓后场双枪是难以走的远的，猛龙以及西步的开拓者都是此类，另外伊巴卡也是个软蛋，愧对四少的称号。东决倒是精彩，残阵绿杉拖了七场，当然，绿杉军不可能赢的，因为当球队遇到困难是需要球星来救场的，而绿凯的两个球星都在场下只能为兄弟们加油，所以今年老詹的运气相当好，一路到总决赛，但也不易，老詹也是脱了一层皮，场场四十多分钟，倒也刷了一堆好数据，得了老汉的意。
<img src="http://pic-bucket.nosdn.127.net/photo/0005/2018-06-09/DJRT1QG04TM10005NOS.jpg" alt="lbj" />
虽然，不是特别喜欢勇士，但更重要的是喜欢老詹，靠着牛的身体，推土机式的打法，投篮姿式僵尸一样难看。16年总决赛，蓄意跨人，是的，这本是比赛的一部分，你想激怒格林，但你可以演的入戏一点嘛，余光也看得到格林倒了，你何必先看一眼，又想一下，然后 再 跨呢？当然啦，那一年，勇士一是输给了自己，球队缺少硬支撑，当水花失准时，库里突破又被严防，没有现在杜兰特之类的人能够强硬得分;二是输给了厄文。事实也证明厄文才是真大腿。</p>

<h3>国内解说档次太低</h3>

<p>还要鄙视一下解说员杨毅，在第四场第四节，勇士确实胜利之时，另外解说问杨，有什么想法时，杨非要提杜兰特投敌一事，明知道这本就会引起球迷争论，真是哪壶不开提哪壶，讨厌这个人，身为解说员要公平公正的说人话。</p>

<h3>历史会证明阿杜离开是正确的</h3>

<p><img src="http://puep.qpic.cn/coral/Q3auHgzwzM4fgQ41VTF2rNAoia9tQWSkpfNVAOoFzYVU3FJLjLiaVqyg/0/" alt="KD" /></p>

<p>杜离开雷霆是正确的选择：威少是一介草莽，有勇无谋的人，球商低，拿到球一头往篮下冲，不管几个人在堵他，也不管别人位置如何，或者直接三分就扔，靠着身体天赋能得些分。所以威少成不了大事儿，因为处理关键球的能力太次了，又不会把球给其他人。16年西决，如果关键球多给杜兰特处理，也许一切都不一样了。所以威少不是一个能够争取总冠军的帮手，另外，雷霆的管理层太次，要不然，当然四少，也不会走了三个，从雷霆出来的人后来发展的相当 的不错，包括维特斯等人。杜兰特肯定是对管理寒了心，所以才出走的，勇士的气氛和现有的基础以及未来的希望吸引了他，只不过不巧的是刚刚勇士击败了雷霆而已，就是这么不巧，让好好的一个转会，弄得球迷和媒体口水快能把阿杜淹死了。所以，杜兰特肯定会留在勇士，多拿几个总冠军，把光芒放无限大，以压住说闲话的人。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初识微信小程序]]></title>
    <link href="http://toughcoder.net/blog/2017/01/16/mini-program-the-first-impression/"/>
    <updated>2017-01-16T22:03:35+08:00</updated>
    <id>http://toughcoder.net/blog/2017/01/16/mini-program-the-first-impression</id>
    <content type="html"><![CDATA[<p>微信小程序，可以说是最近比较火的一个话题了，到处都是小程序的新闻，于是孤也来凑一凑热闹，花了几个小时撸了一个程序员老黄历，来体验一下小程序。</p>

<p><a href=""><img src="https://img.alicdn.com/imgextra/i1/715978679/TB2Fuqbc4XlpuFjSsphXXbJOXXa_!!715978679.gif"></a></p>

<!-- more -->


<h2>体验小程序</h2>

<p>张小龙做事情还是很专业的，小程序的<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/index.html">开发文档</a>，注册流程，<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/devtools.html?t=2017112">开发工具</a>等都相当的完备，可与一些流行的开发平台媲美，不像其他国内的大厂，发布出来的东西，你按文档一步步操作都会出错。</p>

<p>所以，花几分钟时间读一读官文档就可以了，这里也不做准备重复文档。如何注册小程序，如何创建项目，如何搭建页面，照着文档做就可以了。作为体验官，从创建的基础项目开始就可以了，在app.json的pages列表中新添加一项时，开发工具就会自动创建page的目录，里面就有了标准的4个文件。然后分别修改就可以了。开发工具还是比较给力的，自动补全很强大，标准的JS以及平台的API都有自动补全，所以开发体验还是相当好的，所需要的知识就是标准的前端和微信平台的API。</p>

<p>代码在<a href="https://github.com/alexhilton/wechatminiprogram">这里</a>下载。</p>

<h2>小程序的本质</h2>

<p>脱去它那华丽的外衣，来看它的本质，其实体验过React Native的同学应该不会陌生，它的语法与RN很相似。可以这么说，没有非死不可的React Native可能就不会有今天的小程序。</p>

<p>最终在微信上看到的东西，都是由原生View来渲染的。这也是小程序与微信其他平台的最大区别。它的具体渲染原理，也与React native是一致的：编译完了，就是一个JS文件，交给微信来渲染，JS层有Virtual DOM，以及防止过多操作DOM的DOM diff。原生里面根据JS命令生成一个Node tree，由此再生成一个原生的View tree，把这个View tree渲染出来就是看到的页面了。至于平台API，理解成JSBridge就可以了。</p>

<p>关于更详细的小程序原理可参考<a href="https://mp.weixin.qq.com/s?__biz=MzIwNjQwMzUwMQ==&amp;mid=2247484837&amp;idx=1&amp;sn=29677c131aa6e2e68c1c47d3d847a9b4&amp;chksm=97236767a054ee718b08488c396bb342b90f28f11f68940d796c1f00f8cbac66cfb933121cb7&amp;mpshare=1&amp;scene=1&amp;srcid=0116a3fngVdcOBlquwBFfQEL&amp;key=7bdbb59233068edd2e9e41a905bb93bb630ea3bede3038db56d1479b415764dda35df9abf9015513b25eff1921c1791feda6e909b1c6ae05c3053de7bc272bba955c540a83b8a74d029d0ce370e01cd4&amp;ascene=0&amp;uin=MjQ2OTY4MDQ2NA%3D%3D&amp;devicetype=iMac+MacBookPro11%2C2+OSX+OSX+10.11.6+build&amp;lpar;15G1212&amp;rpar;&amp;version=12010210&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=7sJ42zJLD92bfTMSYrZSQCkU5DnK2xz4xhyYLRTGPrk6XIlr7thT07kjGSJYkQK1">这篇文章</a>。</p>

<h2>小程序的定位</h2>

<p>起初孤还想多撸几个小程序，但是在注册时却发现，小程序是不对个人开发者开放的，它只对政府，媒体，公司或者个体户开放注册，且认证审核非常严格，并且，一次注册只能开发一个小程序，换句话说，跟普通客户端的开发者帐号很大不同，客户端帐号注册后，可以开发任意多个应用。由此，可以看出小程序的定位，它只开放给服务提供商，目前服务在微信上有三种方式：订阅号，服务号和企业号。小程序，只是企业服务于用户的另外一种方式：它用最新的动态化技术，以前端开发的方式，用原生应用来渲染，提升开发体验和用户体验。它跟企业号本质上没有区别，能做的事情也不比企业号多。</p>

<p>其实，理解起来，小程序和现有的各种号的区别就是React Native与HTML5的区别，它们能做的事情是一样的，超过H5本身的东西，都需要原生应用来提供（React Native里叫API，H5里叫JSBridge）。它们的区别就在于开发体验&ndash;新的开发思想(react)，JFX；以及用户体验&ndash;渲染方式是原生 的方式，所以与原生 应用的体验是一样的。</p>

<h2>张小龙的克制</h2>

<p>一开始孤去注册，还很生气：这鸟东西竟然把个人开发者挡在外。但思考了一下，就明白了，这样做是非常正确的。为了防止小程序被滥用，失控，就好比安卓市场水果应用商店一样，各种应用参差不齐，病毒，木马，色情泛滥成灾，对微信平台本身也是一个威胁。可以看得出张小龙确实是一个非常出色的产品设计者，对于克制做得相当出色，全面放开小程序，可以迅速的出现大片大片的小程序，因为个人开发者的队伍是非常大的，这在数据上会非常的好看：看，小程序一开放就形成大平台了；看，程序有几十万的程序了，有近百万的下载量了；看，安卓和水果的猿们要失业了；看安卓市场们和水果应用商店要被小程序干掉了。</p>

<p>东西多了，不见得是好事，多了，就意味着杂了，乱了，不好管理了。从开发者注册入口严格把控，并且，每个注册的人只能开发一款小程序，这是非常聪明的决策，可以说是恰 到好处。另外一方面，只对团体开放，小程序就变成了一种插件，另外一种运营方式，而不是对安卓市场和水果应用商店 的一种竞争。如果对个人开发者开放注册，那么会有大量克隆安卓应用和水果应用的小程序出现，会对安卓市场和水果应用商店造成竞争，东西多了，杂了，对微信本身也是一种负担，微信会变得更加臃肿，更加耗费资源，更加的笨拙。</p>

<p>懂得产品和克制的张小龙做出的小程序对微信会有正向的促进作用。慢慢的其他大厂也会推出类似的东西，但我相信能对宿主应用产生正向促进的少。因为这东西会产生很多好看的数据，对KPI，对升官加薪都是大大的好。</p>

<p>多说一句，现在产品汪们都不敢拍脑袋了，因为会被开发challenge的很惨，于是现在流行用数据说话，但数据好就一定是好的产品设计么？很不一定，最简单的例子，16年支付宝多次的社交尝试（敬业福，校园日记，改密漏洞），数据上一定都非常好，但结果怎么样呢？这些超级app里（手机淘宝，微信，支付宝，UC等等），你随便做个功能，不用推广也可以达到DAU百万级，可以秒杀其他小厂辛苦砸钱的小app，但这又有何意义呢？就能说比小app做得好么？有种你离开超级app，做成独立app，再拿数据出来试试！好的产品一定是小而美，而非大而全，相信随着用户的科学素养的提升，这些臃肿的傻全黑粗，迟早被淘汰。</p>

<h2>安卓猿和水果猿大可不必担心</h2>

<p>小程序一发布，就有媒体说，<a href="http://news.mydrivers.com/1/500/500595.htm">好多应用可以卸载了</a>，<a href="http://it.sohu.com/20161228/n477174998.shtml">安卓和水果要失业了</a>，这些都是标题党，赚眼球，增加PV而已。其实大可不必担心。前面提到了，张小龙是懂得克制的人，他不可能让小程序泛滥，因为一旦泛滥，必然危及微信本身，会让微信本身变得非常难用，想想其他所谓的超级app（手机淘宝，支付宝等等），为什么难用，还不因为它里面有太多太多的东西（插件）了。另外，前面也提到，小程序之于公众号，就如React Native之于H5，它只是换了一种渲染方式而已，能做的事情没有变多，超出H5本身的东西都是需要宿主提供API的，所以小程序不可能提供超出微信本身功能的API，那样一来微信岂不是变成了一个操作系统了么？</p>
]]></content>
  </entry>
  
</feed>
