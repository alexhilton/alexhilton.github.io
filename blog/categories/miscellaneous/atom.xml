<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Miscellaneous | 稀有猿诉]]></title>
  <link href="http://toughcoder.net/blog/categories/miscellaneous/atom.xml" rel="self"/>
  <link href="http://toughcoder.net/"/>
  <updated>2023-07-15T09:31:12+08:00</updated>
  <id>http://toughcoder.net/</id>
  <author>
    <name><![CDATA[Alex Hilton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[悼念耗子叔]]></title>
    <link href="http://toughcoder.net/blog/2023/05/16/mourn-mr-hao-chen/"/>
    <updated>2023-05-16T10:03:45+08:00</updated>
    <id>http://toughcoder.net/blog/2023/05/16/mourn-mr-hao-chen</id>
    <content type="html"><![CDATA[<p>惊闻<a href="https://coolshell.cn/haoel">耗子叔</a>突然辞世，悲伤不已。仍活跃在一线的技术大神，前几天仍在社交网络上活跃的大牛，突然就这么走了，犹如一首高亢激昂的交响乐曲，嘎然而止，亦如波涛奔涌的大江，瞬间冰封，不免让人心痛，亦会唏嘘感慨生命的短暂。</p>

<p><a href=""><img src="https://coolshell.cn/wp-content/uploads/2011/03/me.jpg"></a></p>

<!-- more -->


<p>早年就曾关注耗子叔，并成为<a href="https://coolshell.cn/">其博客</a>的忠实读者，但如果非硬要扯上关系，也曾做过同事，2015年初我去了大阿里，彼时耗子叔仍在阿里，记得彼时耗子叔经常分享一些国际巨头（谷歌，亚马逊）的一些高效的工作模式，先进的技术迭代方式，在阿里味引起了不小的反响。</p>

<p>耗子叔是一个技术布道者，对技术有着极度热情和坚定的信仰，写了大量的优质博客，影响了无数人，是很多年轻人的良师益友。他常说的两句话是：学无止境，以及年轻人要多到大平台大公司去开阔眼界。个人最受影响的便是他那篇著名的博客<a href="https://coolshell.cn/articles/4990.html">程序员技术练级攻略</a>，这篇文章的影响力可比肩<a href="https://norvig.com/">Peter Norvig</a>大神的那篇著名的<a href="https://norvig.com/21-days.html">Teach Yourself Programming in Ten Years</a>。</p>

<p>耗子叔起步不高，却大器晚成，是勤奋成材的典范，是学无止境的标兵，坚定的信仰着技术改变世界，并为之奋斗，为技术布道，并追求极致的工程师文化。相信如果耗子叔起点高一些，或者再多给他一些时间，他的成就会更高，至少能达到巨头公司副总的级别。</p>

<p>现今社会职场压力大，特别是IT行业内卷极其严重，小则996，大则007，耗子叔以及很多嘎然而止的鲜活生命也都在提醒着我们要多多运动，关注身心健康，正所谓前面那个1倒下了，后面再多的0都是徒劳。</p>

<p>愿耗子叔能安息，也愿天堂有纯正的技术氛围和极致的工程师文化。</p>


]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Table Tennis Road Map]]></title>
    <link href="http://toughcoder.net/blog/2023/02/22/table-tennis-road-map/"/>
    <updated>2023-02-22T21:28:33+08:00</updated>
    <id>http://toughcoder.net/blog/2023/02/22/table-tennis-road-map</id>
    <content type="html"><![CDATA[<p>乒乓球可以锻炼反应能力，运动量适中，场地要求不高，能放下球台就能玩，人数要求也不高，二个人就能玩，所以非常适合中老年人，打了一段时间感觉良好，但乱打还是不行的，需要好好入门，然后再慢慢提高。</p>

<p><a href=""><img src="https://www.athens2020.org/sites/default/files/styles/fullhd/public/disciplines-table-tennis.jpg?itok=tgR2uDF5" title="auto auto" ></a></p>

<!-- more -->


<p>注意，所有的动作均以右手横板为基准，因为尝试了各种手法，横板是最为舒服的，因此决定用横板。</p>

<h2>乒乓球核心要点</h2>

<p>其实乒乓球不难，但基础的东西一定要对，否则会养成不好的习惯，而一旦形成习惯了就很难改，所以从最开始，基本的动作都要按照 标准的来，打下良好的基础后，后续提高才会更顺利。</p>

<h3>放松，舒服</h3>

<p>运动一定是符合身体的自然规律的，所以一定要做到放松和舒服，凡是不舒服不放松就违被了自然规律，就一定是错的，不但效果不好，而且会去身体造成伤害。</p>

<p>比如站位，是又脚自然分开，一前一后，在中间偏左一点（惯用右手，横板），身体略向前。肩要放松，手腕肘都要放松，千万不能端着肩，提着肘，或者全身都绷的很紧，这是错误的。运动的规律都是在发力（击球时）的时候，是紧的，是端的，但绝大部分时间都是要自然放松，所有运动都是如此。</p>

<p>引拍，挥拍也要适度，让肘和手以身体为轴心自然的去旋转，而不要过度的引后（向后甩的太远），过度的挥拍（向前挥的太远）这都是不对的。</p>

<p>包括握拍，也要松紧适度，不用太紧的捏着，只有击球时需要握紧，不然容易飞出去，其余大部分时间，都是拿住拍子即可，只要拍不从手上掉下来即可，不用太紧，要放松，要自然。</p>

<p>时刻想着自然和舒服，始终处于一种自然和放松的状态。</p>

<h3>以身体为轴，用腰转动发力</h3>

<p>乒乓球的主要动作引拍和挥拍，都是以身体为轴，通过转动腰来进行，手腕，肘和肩都是不动的。向后转身，即是引拍，向前转身即是挥拍。</p>

<p>要仔细体会这个要领，用腰的转动来实现引拍和挥拍，身体的各个部位都没有位移，只有转动。</p>

<h3>重心轮换</h3>

<p>两脚 自然分开，略比肩宽，一前一后，重心随着身体的转动而不停在两脚 之间切换。正常时重心在左脚上，引拍时，向后转动，重心到了右脚上，向前转身，挥拍击球，重心又回到左脚 上，然后再向后转心，还原动作。</p>

<h3>还原动作，专注于球，提前调整位置</h3>

<p>击球后，要立刻还原动作，然后专注于球，预判球的方位，远近，然后调整位置，同时引拍，准备击球。</p>

<h2>具体技术要点</h2>

<ol>
<li>站位，站在中线的左边，身体不能超过中线</li>
<li>左脚在前，右脚 在后，重心在左脚上，两脚略比肩宽，身体略前倾</li>
<li>肩放松，肘放松，腕放松，手放松，不能端着，不能紧绷着，要放松</li>
<li>不要抬肘，一定不能抬肘，要自然放松</li>
<li>拍子，腕，肘要成一个直线，拍了向前斜，与台面约45度角</li>
<li>球在身体右边，用正手攻球，就是向右后转身，引拍，击球，然后还原</li>
<li>球在身体左边，用反手攻球，向左后转身，引拍，击求，然后还原</li>
<li>想要击球有力度，就引拍幅度大一些，力量靠身休转动的角度发出来的，而不是肘或者手腕（身体是轴心，手臂是半径，转动角度越大，产生的力矩就越大）</li>
<li>拍子要始终与台面形成斜角，这样击球才会有旋转，并且球会速度快且向下飞，而不是速度慢向上飞（那就被挑起来了，会被对方狠拍杀死），球要越旋越好，越低越好，越快越好。所以，拍子要压低与台面的斜角，角度越小越好。</li>
</ol>


<p><img src="https://so1.360tres.com/t014e6a3a2efc70251f.jpg" alt="" />
所以，总结 起来，其实乒乓球就两个主要动作，向右后转身，然后还原（正手攻球）；向左后转身，然后还原（反手攻球），不打球时，也可以练习这些基本动作。
<img src="https://file.zhibo.tv/uploads/imgs/2021/06-07/1623061996619420_2606x1817.jpg" alt="" /></p>

<h2>四大打法</h2>

<h3>抽</h3>

<p>拍子向前斜，与台面呈斜角，从下向上击球，这是抽，正手攻球，反手基本都是抽。引拍幅度要大一些，球拍角度要圧低一些，这样回球力度大，速度快，旋转好，高度低。打出来的都是上旋球。</p>

<p>适合长球，球在台面外，球下落时，从下向上抽。</p>

<h3>推</h3>

<p>拍子，稍向前斜，比抽时斜角要大，几乎快直立。拍子不动，手腕不动，是整个手臂（肘，腕和拍）整体向前推，推的过程中拍子腕和肘仍呈直线，相对位置不变，是整体向前推。</p>

<p>适合，反手时，球比较高，球在台面上，球速也不快时，把球推回对方。当然 也有快推和慢推，但整体差别不大，打出来的球也基本没旋转，球速也不快，也很高。很容易被对方直接快速抽回来。</p>

<h3>削</h3>

<p>拍向后斜，从上向下击球，这是削。打出来的是下旋球
<img src="https://www.ttline.cn/uploadfile/ueditor/image/2022/02/4085168991547474880.jpg" alt="" />
适合球比较高时，在台面上，或者在台面外都可以，但一定要比较高。</p>

<h3>搓</h3>

<p>拍子向下斜，与台面的斜角是负的，基本是直着向前搓球。</p>

<p><img src="https://tse3-mm.cn.bing.net/th/id/OIP-C.-yw5SLZUxW0Tgg88poSb-QHaE8?pid=ImgDet&amp;rs=1" alt="" /></p>

<p>适合台内的短球。搓出来的也是下旋球。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MarkDown之数学公式]]></title>
    <link href="http://toughcoder.net/blog/2022/07/13/math-symbols-in-markdown-made-easy/"/>
    <updated>2022-07-13T21:35:58+08:00</updated>
    <id>http://toughcoder.net/blog/2022/07/13/math-symbols-in-markdown-made-easy</id>
    <content type="html"><![CDATA[<p>有时候文档里面会涉及一些数学公式，用常规的格式都难以得到满意的效果。</p>

<p>数学公式方面<a href="https://www.latex-project.org/">Latex</a>是最为专业的，Markdown也是支持Latex的。</p>

<p><a href=""><img src="https://img95.699pic.com/photo/40176/0613.gif_wh860.gif" title="auto auto" ></a></p>

<!-- more -->


<h2>在公式中加入空格</h2>

<p>可以参考 这几个文章:</p>

<ol>
<li><a href="https://www.overleaf.com/learn/latex/Spacing_in_math_mode">Spacing in math mode</a></li>
<li><a href="https://latex-tutorial.com/latex-space/">LaTeX Space Guide: vertical, horizontal, text and math modes, and much more!</a></li>
<li><a href="https://www.overleaf.com/learn/latex/Articles/How_to_change_paragraph_spacing_in_LaTeX">How to change paragraph spacing in LaTeX</a></li>
</ol>


<h2>各种Markdown编辑器的支持情况</h2>

<h3>LeetCode题解</h3>

<p>它是直接支持的，用\$\$来标识就好了。用双\$\$\$\$来居中。</p>

<p>比如$\vec{AB}$就是一个向量。</p>

<h3>MacDown编辑器</h3>

<p>不支持Latex，但支持<a href="https://en.wikipedia.org/wiki/TeX">TeX</a>和<a href="https://en.wikipedia.org/wiki/MathML">MathML</a></p>

<p>A_s<sup>T</sup> = B</p>

<h3>Octopress</h3>

<p>Latex和MathML貌似都不支持。如果要支持，可以引入三方插件。</p>

<h2>参考资料</h2>

<ul>
<li><a href="https://www.jianshu.com/p/4460692eece4">Markdown 数学公式语法</a></li>
<li><a href="https://blog.csdn.net/jyfu2_12/article/details/79207643">markdown最全数学公式速查</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/158156773">一篇文章教会你如何在Markdown文档中插入数学公式</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/441454622">MarkDown数学公式</a></li>
<li><a href="https://www.latexlive.com/home">LaTeX公式编辑器ver1.6.</a></li>
<li><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac画图工具]]></title>
    <link href="http://toughcoder.net/blog/2022/04/01/diagrams-drawing-made-easy/"/>
    <updated>2022-04-01T23:30:44+08:00</updated>
    <id>http://toughcoder.net/blog/2022/04/01/diagrams-drawing-made-easy</id>
    <content type="html"><![CDATA[<p>在平时开发中，经常需要画各种图形，比如流程图，架构图和UML图等等。找到一个好用且高效的工具能事半功倍，现在就来总结一下在Mac上面有哪些好用的画图工具。</p>

<p><a href=""><img src="https://www.pcwdld.com/wp-content/uploads/Cade-Network-diagramming-tool.jpg" title="auto auto" ></a></p>

<!-- more -->


<h2>厘清需求</h2>

<p>还是要先厘清需求明确问题。需求也比较明确，最好是免费，用户友好，支持导出各种图片格式，能支持常见的各种图形，如流程图，架构图和UML图等。</p>

<h2>桌面软件</h2>

<p>桌面软件大部分都是付费的，但也有一些是免费的，以下的值得尝试，这些都是专业公司开发的，在功能，易用性和稳定性上面要好一些。</p>

<table>
<thead>
<tr>
<th> &nbsp;&nbsp;&nbsp;&nbsp;Name&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;付费情况&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下载安装&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;支持平台&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th> &nbsp;&nbsp;&nbsp;&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp; </th>
</tr>
</thead>
<tbody>
<tr>
<td> <a href="https://www.nchsoftware.com/chart/index.html?ref=cj&amp;cjevent=27d37b109b8711eb808b01840a180511">ClickCharts</a> </td>
<td style="text-align:center;"> 基础版本免费 </td>
<td style="text-align:center;"> <a href="https://www.nchsoftware.com/chart/clickchartspmaci.zip">网站下载</a> </td>
<td style="text-align:center;"> Windows<br/>Mac<br/>Android </td>
<td> 界面接近Visio<br/>功能比较齐全 </td>
</tr>
<tr>
<td> <a href="http://pencil.evolus.vn/">Pencil</a> </td>
<td style="text-align:center;"> 开源且免费 </td>
<td style="text-align:center;"> <a href="http://pencil.evolus.vn/dl/V3.1.0.ga/Pencil-3.1.0.ga.dmg">网站下载</a> </td>
<td style="text-align:center;"> Windows<br/>Mac<br/>Linux </td>
<td> 是一款开源软件，免费使用<br/>不好的地方是文档较少 </td>
</tr>
</tbody>
</table>


<h2>在线工具</h2>

<p>除了桌面软件以外，还有很多在线的图形工具，非常的好用。随着Browser性能越来越强，现在Web端的体验也是相当的好，可以优先选择Web端。</p>

<h3><a href="https://app.diagrams.net/">Draw.io</a></h3>

<p>这个相当有名气，用的也比较广泛，一般来讲能够满足日常需求。</p>

<h3>基于JavaScript的图形库</h3>

<p>还有很多用JavaScript实现的图表库也相当的棒，有在线的编辑工具，并且很多都支持语法脚本，支持云存储，也支持把结果以图片形式下载到本地，非常的实用。</p>

<table>
<thead>
<tr>
<th> Name </th>
<th style="text-align:center;">  &nbsp;&nbsp;&nbsp;&nbsp;在线编辑工具&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th> &nbsp;&nbsp;&nbsp;&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp; </th>
</tr>
</thead>
<tbody>
<tr>
<td> <a href="https://mermaid-js.github.io/mermaid/#/">mermaid</a> </td>
<td style="text-align:center;"> <a href="https://mermaid.live/edit#pako:eNpVkM-KwkAMxl8l5OSCfYEeBG3Vi6Cgt46H0InOIPOHdMoibd99p5aF3ZyS7_t9IWTANmjGEp9C0cCtVh5ybZvKiO2So-4ORbEZj5zABc_vEXarY4DOhBitf34t_G6GoBpOM8aQjPWvabGqT_7seYS6OVFMId7_OrfvMMK-sReT1_93jHBOHZoHlQ8qWhKoSD4IrtGxOLI6nz7MisJk2LHCMrea5KVQ-SlzfdSUeK9tCoJlkp7XSH0K17dvf-eFqS3lL7hFnH4ABg5bBA">mermaid live</a> </td>
<td> </td>
</tr>
<tr>
<td> <a href="https://bramp.github.io/js-sequence-diagrams/">js-sequence-diagrams</a></td>
<td style="text-align:center;"> </td>
<td></td>
</tr>
<tr>
<td> <a href="http://flowchart.js.org/">flowchatjs</a> </td>
<td style="text-align:center;"> </td>
<td></td>
</tr>
</tbody>
</table>


<p><br/>
更多的在线工具可以参考<a href="http://toughcoder.net/blog/2022/03/28/blog-image-bed-made-easy/">前一篇文章</a>。</p>

<h2>参考资料</h2>

<ul>
<li><a href="https://www.makeuseof.com/tag/free-flowchart-makers-mac/">The 7 Best Free Mac Flowchart Makers for Quick and Easy Diagrams</a></li>
<li><a href="https://www.softwaretestinghelp.com/flowchart-software/">10 Best Free Flowchart Software For Windows And Mac</a></li>
<li><a href="https://machow2.com/flowcharts-for-mac-the-best-software/">10 Best Flowchart Software of 2022 For Pros</a></li>
<li><a href="https://zapier.com/blog/flowchart-diagramming-software/">The best flowchart software and diagram tools in 2022</a></li>
<li><a href="https://www.techrepublic.com/article/five-free-web-based-tools-that-make-diagramming-a-snap/">Five free web-based tools that make diagramming a snap</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[博客图形图像解决办法]]></title>
    <link href="http://toughcoder.net/blog/2022/03/28/blog-image-bed-made-easy/"/>
    <updated>2022-03-28T20:46:51+08:00</updated>
    <id>http://toughcoder.net/blog/2022/03/28/blog-image-bed-made-easy</id>
    <content type="html"><![CDATA[<p>一个好的博客必须要图文并茂，但图片是一个大问题，用GitHub pages搭建的博客最为蛋疼的就是图床问题，被图床问题困扰了很久，需要花点时间好好的解决一下子了。</p>

<p><a href=""><img src="https://cdn.writermag.com/2016/12/blogs-versus-articles.jpg" title="auto auto" ></a></p>

<!-- more -->


<h2>图片始终是痛点</h2>

<p>曾经用过七牛，免额满了后就没有再用了。</p>

<p>后来用微博，但后来微博不允许外链了，不但不能再用了，之前存在微博的图片也都无法访问了。</p>

<p>免费的图床也一直都有，但都不长久，这东西很难盈利，运营不过多久就会关了，还要再找新的。一个字就是蛋疼。</p>

<h2>厘清需求</h2>

<p>要想解决问题，需要先把问题澄清，问题源于图片需求。</p>

<ul>
<li>非原创性图片，用于splash，或者说明和阐述一些细节的</li>
<li>原创图片，手动画的一些图片</li>
<li>截屏，手机截屏，或者电脑屏幕截图，用于展示过程说明或者运行结果</li>
<li>原创图形，如流程图，结构图，架构图，设计图或者UML图</li>
</ul>


<p>在博客中使用的图形与图像，就是以上四种。</p>

<h2>如何解决问题</h2>

<p>针对 不同的需求用不同的解法。</p>

<h3>非原创性图片用链接</h3>

<p>对于非原创性图片，尽可能的在网络上搜索，使用网络图片，这是最为省事的。</p>

<p>搜索的时候要注意：</p>

<ol>
<li>尽是用<a href="https://cn.bing.com/">Bing</a>来搜索</li>
<li>图片不能被墙，要都能访问的</li>
<li>注意版权，别侵权</li>
</ol>


<h3>原创性图片和截屏找图床</h3>

<p>没办法，这个只能找图床来解决了。后面再单独拿出来说。</p>

<h3>原创图形用画图库</h3>

<p>对于一些原创性的图形，要寻找画图库来解决，就是那种内嵌在网页里面的，用脚本或者源码去画图的图形库。后面单独说。</p>

<h2>痛点治疗方案</h2>

<p>通过上面来分析，如何找到图床和画图库，就成解决痛点的关键。</p>

<h3>图床用<a href="https://postimages.org/">postimages</a></h3>

<p>看似绕来绕去，仍还是需要寻找图床。但其实还是不一样，通过上面分析，发现仅有少量的原创图片和截屏需要图床，所以整体量并不大。用GitHub就可以了，空间是够的不是问题，问题就在于稳定性，毕竟访问GitHub经常抽风（不是GitHub server本身抽风，而是网络抽风），另外就是CDN加速。即使GitHub能正常访问，但是还是太慢了，对于常规的push/pull还好，但图片肯定会明显感觉到很慢，必须寻找CDN加速方法。</p>

<ul>
<li>新建一个repo，专门用于博客图床</li>
<li>寻找CDN加速方法</li>
</ul>


<p>网络上还真有大把的人用GitHub用作图床，方法有两种：</p>

<ol>
<li>直接在GitHub issues中上传图片，<a href="https://dev.to/adityatyagi/host-images-for-free-on-github-3d1c">这篇文章有详细讨论</a></li>
<li>创建一个repo，<a href="https://fizzy.cc/use-github-repo-to-host-images/">可以看这篇文章</a>，讲的很详细</li>
</ol>


<p>方法1非常的简单和方便，对于图片需求量不大的话，非常合适，而且它不占用repo的空间配额。目前先用方法1。如果 后面图片量确实大的话，再考虑切到方案2.</p>

<p><strong>注意</strong>：GitHub貌似做了屏蔽，不让上传图片，可能是因为上传的图片太多了，hold不住了，所以做了限制。</p>

<h3>专用图床</h3>

<p>目前发现<a href="https://postimages.org/">postimages</a>比较好用，先用这个吧。</p>

<ul>
<li><a href="https://www.bettertechtips.com/blogging/image-hosting-blog/">7 Free Image Hosting Sites to Save Your Blog Storage</a></li>
<li><a href="https://blogpros.com/blog/2016/03/host-blog-images-free">10 Reliable Websites to Host Your Blog Images for Free</a></li>
</ul>


<h3>寻找JavaScript图形库</h3>

<p>这个现成方案很多，就需要找一个合适的。</p>

<p>我们的需求是：</p>

<ol>
<li>最好是内嵌在网页中的</li>
<li>免费，毕竟需求量不是很大，偶尔才需要画图，没必要花钱</li>
<li>支持常见的图形和图表，如流程图，结构图，架构图和UML图</li>
<li>使用方式当然越简单越好</li>
</ol>


<p>可行的的方案：</p>

<ul>
<li><a href="https://modeling-languages.com/javascript-drawing-libraries-diagrams/">20+ JavaScript libraries to draw your own diagrams</a></li>
<li><a href="https://www.chartjs.org/">Chart.js</a> 这个是图表，也就是统计数据的图表（柱图饼图散列图等）。</li>
<li><a href="https://hackernoon.com/my-top-13-javascript-diagram-libraries-g2a53z6u">My Top 13 JavaScript Diagram Libraries</a></li>
<li><a href="https://ourcodeworld.com/articles/read/159/top-5-best-free-diagrams-javascript-libraries">Top 5 : Best free diagrams javascript libraries</a></li>
</ul>


<p>目前来看<a href="http://mermaid-js.github.io/mermaid/#/">mermaid</a>和<a href="http://flowchart.js.org/">FlowChart.js</a>比较符合需求，它们都可以内嵌到网页里面，且功能较强大。而mermaid的语法更简洁一些，我们可以先从mermaid开始尝试。目前最重要的事情是，如何把图形内嵌到博客中，把链路先跑通。</p>

<h3><a href="https://mermaid-js.github.io/mermaid/#/">mermaid</a></h3>

<p>语法简单，与Markdown类似，同时库比较简单，方便集成。比较符合我们的需求。就先从它开始。</p>

<p>集成方法，非常简单，先引入库，然后定义一个class=&ldquo;mermaid&#8221;的<div> tag即可。因为Markdown是支持内嵌HTML tag的，所以可以直接在Markdown中写。</p>

<p>&#8220;`html</p>

<script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>


<script>mermaid.initialize({startOnLoad:true});</script>




<div class="mermaid">
graph TD;    A&#8211;>B;    A&#8211;>C;    B&#8211;>D;    C&#8211;>D;
</div>


<p>&#8220;`</p>

<p>效果就是这样：</p>

<script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>


<script>mermaid.initialize({startOnLoad:true});</script>




<div class="mermaid">
graph TD;    A&#45;&#45;>B;    A&#45;&#45;>C;    B&#45;&#45;>D;    C&#45;&#45;>D;
</div>


<p><br/></p>

<h3>用entity解决转义问题</h3>

<p>因为Markdown以及一些静态博客框架如Jekyll或者Octopress会对一些字符进行转义，因此有些时候会造成最终结果是mermaid运行出错：Syntax error in graph</p>

<p>原因就在于一些字符被Mardown以及博客框架用作特殊用途了。因此需要转义，在mardown源码中用HTML Entity来代替被转换的字符即可。因为mermaid是JavaScript库，它是在DOM都渲染好了之后才对div tag进行处理，而HTML enity能保证在DOM中是正确的字符，又恰是在mermaid处理之前，因此可以得到符合预期的结果，而且是用Markdown编辑器预览，以及最终博客里面都能得到符合预期的结果。</p>

<p>常见的需要做转义的字符：</p>

<table>
<thead>
<tr>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;预期字符&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th style="text-align:center;"> &nbsp;&nbsp;&nbsp;&nbsp;HTML Entity&nbsp;&nbsp;&nbsp;&nbsp; </th>
<th> &nbsp;&nbsp;&nbsp;&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp; </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> &#45; </td>
<td style="text-align:center;"> &amp;#45; </td>
<td> 单个&#45;不需要，当其与&gt;组合时需要  </td>
</tr>
<tr>
<td style="text-align:center;"> &lt;&lt; </td>
<td style="text-align:center;"> &amp;lt;&amp;lt; </td>
<td> 单个不需要，两个在一起就需要  </td>
</tr>
<tr>
<td style="text-align:center;"> &gt;&gt; </td>
<td style="text-align:center;"> &amp;gt;&amp;gt; </td>
<td> 单个不需要，两个在一起就需要 </td>
</tr>
</tbody>
</table>


<p><br/><br/>
这里是常见的HTML Entity参考：</p>

<ul>
<li><a href="https://www.w3schools.com/html/html_entities.asp">HTML entities</a></li>
<li><a href="https://dev.w3.org/html5/html-author/charref">HTML entities table</a></li>
<li><a href="https://www.freeformatter.com/html-entities.html">HTML Entity List</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
