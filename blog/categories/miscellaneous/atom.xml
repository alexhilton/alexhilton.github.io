<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Miscellaneous | 猿轩阁]]></title>
  <link href="http://alexhilton.github.io/blog/categories/miscellaneous/atom.xml" rel="self"/>
  <link href="http://alexhilton.github.io/"/>
  <updated>2014-11-13T23:53:39+08:00</updated>
  <id>http://alexhilton.github.io/</id>
  <author>
    <name><![CDATA[Alex Hilton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[训服你的Mac]]></title>
    <link href="http://alexhilton.github.io/blog/2014/11/13/tame-mac/"/>
    <updated>2014-11-13T22:15:58+08:00</updated>
    <id>http://alexhilton.github.io/blog/2014/11/13/tame-mac</id>
    <content type="html"><![CDATA[<p>天下武功唯快不破，提升效率是提升战斗力的唯一途径，而一个舒适且高效的开发环境是保证效率的重要方面，对于习惯了Windows和Linux的人来说，习惯使用Mac还是需要一定的时间的，这是就总结一些，如何配置并习惯Mac。</p>

<p><a href=""><img src="http://applethis.com/wp-content/uploads/2012/06/Apple-OS-X.jpg"></a></p>

<!-- more -->


<h2>Mac上面的常用快捷键</h2>

<p>在Windows上面有一些常用的快捷键，比如像Ctrl+W, Ctrl+F等等，还是非常有用的。在Mac上很多快捷键都是CMD键加上其他键组合的（如果是虚拟机的话，就是Windows的那个键）。</p>

<ul>
<li>CMD+R（先按CMD，再按r键）&ndash; 刷新Safari当前页，与Windows上的F5一样</li>
<li>CMD+UP或者HOME&ndash;滚动网面到最上端</li>
<li>CMD+DOWN或者END&ndash;滚动网页到最下面</li>
<li>CMD + LEFT &ndash; 把光标跳到行首，这个在编辑时常用</li>
<li>CMD + RIGHT &ndash; 把光标跳到行尾</li>
<li>CMD + W &ndash; 关闭当前的TAB</li>
<li>CMD + S &ndash; 保存文档</li>
<li>但是经终端里面的快捷键是跟Linux是一样的，比如Ctrl+W是删除掉一个字, Ctrl+C终止一个进程</li>
</ul>


<h2>配置终端</h2>

<p>对于开发者来讲，命令行始终都是一个非常好的工具，无论是什么平台，虽然苹果以GUI著称，但是命令行还是很有用处。Mac的Shell默认是bash，因为它是Unix的一个分支，所以使用起来跟Ubuntu几乎一样，常用的命令，常见的配置完全一样。</p>

<p>但是默认的终端很难看，也不好用，需要一些配置，打开终端的Preferences，选择一个Profile，然后进行一些颜色，字体，大小可以按照自己的风格来，在Shell一栏的“When the shell exits:”选择Close if the shell exited cleanly。然后，Prompt before closing选择Only if there are processes other than the login shell and …</p>

<p>安装XCode时，一定要把命令行工具集也都安装上。</p>

<h3>给终端配色</h3>

<p>在$HOME目录下，编辑.bash_profile文件，如果没有就自己创建一个，在里面最下面输入：</p>

<pre><code class="bash">export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
</code></pre>

<p>具体这是啥意思，可以参考<a href="http://osxdaily.com/2012/02/21/add-color-to-the-terminal-in-mac-os-x/">这篇文章</a></p>

<h3>添加alias</h3>

<p>同样，在.bash_profile文件中添加一些自己喜欢的alias</p>

<pre><code class="bash">alias grep='grep -rnIE'
</code></pre>

<h2>配置vim</h2>

<p>默认的Mac带有vim，但是还需要一些配置：</p>

<p>在$HOME下面创建一个.vimrc文件，并在里面输入：</p>

<pre><code class="bash">" An example for a vimrc file.
"
" Maintainer:   Bram Moolenaar &lt;Bram@vim.org&gt;
" Last change:  2011 Apr 15
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"         for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"       for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup      " do not keep a backup file, use versions instead
else
  set backup        " keep a backup file
endif
set history=50      " keep 50 lines of command line history
set ruler       " show the cursor position all the time
set showcmd     " display incomplete commands
set incsearch       " do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &amp;guioptions = substitute(&amp;guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap &lt;C-U&gt; &lt;C-G&gt;u&lt;C-U&gt;

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &amp;t_Co &gt; 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") &gt; 1 &amp;&amp; line("'\"") &lt;= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent        " always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
          \ | wincmd p | diffthis
endif

set nu
set sm
set si
set cindent
set smarttab
set ts=4
set shiftwidth=4
set expandtab
set mouse=a
set nobackup
let g:neocomplcache_enable_at_startup = 1
colorscheme desert
</code></pre>

<p>如果对自带的vim不满意，可以使用<a href="http://code.google.com/p/macvim/">MacVim</a>，这个功能更为强大，且支持GUI操作。</p>

<h2>配置git</h2>

<p>这个就是配置常用的git属性：</p>

<pre><code class="bash">[color]
    diff = true
    status = true
    interactive = auto
    branch = true
[core]
    editor = /usr/bin/vim
    autocrlf = false
    filemode = false
[merge]
    tool = vimdiff
[alias]
    co = checkout
    ci = commit
    st = status
    br = branch
[push]
    default = upstream
</code></pre>

<p>如果你也有使用Mac的一些技巧，请与我分享。</p>
]]></content>
  </entry>
  
</feed>
