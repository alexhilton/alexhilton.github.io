<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Miscellaneous | 稀有猿诉]]></title>
  <link href="http://toughcoder.net/blog/categories/miscellaneous/atom.xml" rel="self"/>
  <link href="http://toughcoder.net/"/>
  <updated>2023-12-09T18:58:06+08:00</updated>
  <id>http://toughcoder.net/</id>
  <author>
    <name><![CDATA[Alex Hilton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[回乡见闻：感知农村的新变化]]></title>
    <link href="http://toughcoder.net/blog/2023/08/09/hometown-travel-notes/"/>
    <updated>2023-08-09T22:28:53+08:00</updated>
    <id>http://toughcoder.net/blog/2023/08/09/hometown-travel-notes</id>
    <content type="html"><![CDATA[<p>前不久休了一个星期的假，回了趟老家，一路所见所闻不少令人惊叹的事情，有必要略作小结并记录下来，也没什么特别的目的，就是把一些看到的比较有意思的事情以及产生的想法分享一下。</p>

<p><a href=""><img src="https://ts1.cn.mm.bing.net/th/id/R-C.4c2c27ca5d13da44d3fced7c83764ff7?rik=Y4MYdJogaFhAsQ&amp;riu=http%3a%2f%2fimg.siluclouds.com%2fa%2fthumb%2f10009%2f201902%2f8a895a81d2c2425a656bea42dade314f.jpg!w960_h540.jpg&amp;ehk=KlsjVgYoPkPh4RVso0rQpCyZXeeNVBbmRFABESBYr%2bM%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" title="auto auto" ></a></p>

<!-- more -->


<h2>一些背景</h2>

<p>我的老家是在东北的一个贫困县城的一个村子里，跟一些讲述东北地区影视剧里面的村子是一样的。虽然是贫困县，但其实并不是想像中的那种吃不上饭，住不上房子的那种，从小到大吃穿住以及上学的费用等等都不成问题的。贫困的原因并不是生活不温饱，而是这么多年来，一直富不起来，与同区域内的较富一点的县城比，以及南方的大多数县城比，还是落后很多的，生活在这里的人也相对较穷。</p>

<p>县城下面，就是镇和乡，一个县城下面会十几个乡镇，乡和镇下面是村，我老家就住在村上，村下面还有屯儿，一个乡或镇下面会十几个村，一个村通常有十个左右的屯儿。对于生活在村里面的人来说，乡镇就是活动半径，一年会去几次县城，县城的商品是最全的，生活所需要的所有东西都能在县城买到，乡镇上最常用的东西如米面菜，零食，日用百货和常用药品也都能买 得到，到了村儿里，就只有食杂店了，零食和最常用的日用品能买 得到，屯儿的话则是啥都没有，只有生活在这里的人。</p>

<p>以前路不好，柏油水泥这种下雨天也能走的路只通到乡镇一级，而且也破败不堪。现在情况大为改观，村屯之间都修了水泥路，村屯里面的主要几条街道也都给修了水泥路，对出行有极大的改善，以前那种雨后全是大泥巴，无法出行的场景，已看不到了。因为路好了，所以走村串屯的流动商贩也远比以前多了，通常是用一个小型货车，拉车各种生活物品，一个村一个村的流动，到了村上就走街串巷的叫卖。</p>

<h2>微信无处不在</h2>

<p>令人震惊的是微信真的无处不在，已经触达了所有人，村里的老人也都用微信相互沟通。此外，商业活动和行政工作也都用微信。比如，省城到县城的客运大巴的售票都是通过微信服务号实现的，并没有官方网站。村上的行政工作，也都是通过微信，发什么通知之类的都是通过微信群，甚至有些福利的发放等也都通过微信。</p>

<p><img src="https://logodix.com/logo/1812564.png" alt="" /></p>

<p>还有一个现象是，都用微信支付，几乎看不到支付宝的影子。比如县城的出租车，乡镇村店里的收款，以及一些流动商贩都是用微信来收款，没有用支付宝的。猜测原因可能是大家平时就用微信，所以顺便用微信支付来方便交易，支付宝只有支付功能，不能用来干别的，为啥要用它？</p>

<h2>镇上的蜜雪冰城极为受欢迎</h2>

<p><img src="https://tse4-mm.cn.bing.net/th/id/OIP-C.5y5uvhFtaTE__UmR4U6xEQHaFj?pid=ImgDet&amp;rs=1" alt="" /></p>

<p>稍好一点的乡镇上有蜜雪冰城的店，并且比较受欢迎，但没看到同类型的其他品牌的饮品店。店的空间不小，有空调冷气，有舒适的位子坐，年轻人会扫码微信点餐（微信真的无所不能，无所不在啊），年纪大一点的人就现场排队点餐，所有单品均在5~10块左右，却比袋装的冷饮和瓶装的饮料口味好上不少，老少皆宜。</p>

<h2>快递最后一公里极为蛋疼</h2>

<p>村里人网购其实前几年就开始了，但现在仍不是主流，最主要的原因仍旧是快递最后一公里问题。快递包裹只能送到乡镇一级的代收点，无法到村，连京东也只是送到乡镇的代收点，后面就只能自己想办法去取。</p>

<h2>美团社区团购已深入村里</h2>

<p><img src="https://n.sinaimg.cn/sinakd20111/320/w1200h720/20210413/acde-knqqqmv1811611.jpg" alt="" /></p>

<p>最令人震惊的是村里面的人已经有不少人使用美团的社区团购了，不过只能是次日达，也就是今天下单明天送达，并且品类越来越齐全了，不但有瓜果蔬菜，米面油和酒水，连日用百货也都有了。不但村里面的年轻人会大量的下单，连一些老年人也开始大量的下单了，因为有些单品确实很便宜。并且使用相当的方便，直接用微信里面的美团小程序就能下单，微信就能登录，支付就用微信支付，即使对于老年人也是没有难度的。</p>

<p>每天下午4点左右，会有配货的车把货物送到村里面的团长家里，然后大家都去团长家里取货。商品的丰富程度与县城的超市是一样的，远比乡镇村的各种店丰富，事实上货品也都是从县城的仓库中调配出来的。</p>

<h2>手机多是HOV的中低端机</h2>

<p>村里人用的手机都是荣耀，OPPO和Vivo的中低端手机，约在1000元~2000元档，年轻一点的人用2000元往上一点的，老年人一般都是一千出头的千出头的千元机。大部分人手机中应用不多但微信，快手和抖音这三个几乎每个手机上都有。</p>

<p>手机毕竟属于较贵重的单品，前面也说了快递无法直达村，所以人们买 手机肯定是去县城里面的店里面买，这说明在县城级别的线下市场，HOV仍占绝对优势，粮厂的优势仍是在一二线城市。</p>

<h2>农村垃圾处理问题很大</h2>

<p>现在村里面垃圾处理是一个很大的问题，其实一直都是一个问题，只是以前感觉没那么明显，但现在人们生活水平好了一些，衣食方面更新的速度比以前快很多，自然产生的垃圾也多了很多，网购和社区团购也导致人们买更多的有包装的食品，这也会产生比以前更多的垃圾。</p>

<p>垃圾也不会随处丢，一般都是集中到村子外面的某一处，但也只是简单的堆放在那里，没有进一步的处理方式（如填埋或者焚烧），有的管理稍好一点的乡镇，会调用资源进行进一步的集中，然后填埋，但也不够理想，毕竟成本很高，村屯又很分散，清运垃圾的成本很高，很多乡镇都搞过垃圾集中站，但最后都不了了之了。</p>

<h2>房地产大周期已到尽头</h2>

<p>现在村屯里面全是新房子了（砖墙和铁皮屋顶），小时侯那种土墙和茅草屋顶已经见不到了，稍年轻一点的人也会在县城里面买楼房住，农忙时会回到村里面住，忙完了就会回到县城住，大部分也都买 了小汽车。即使这样县城的楼房还空着一大半，前几年地产商在县城疯狂的建了好多新楼房，但愿去县城的人和有能力去县城的人毕竟有限。另一方面，县城的建材市场行情近一两年也大幅下滑，因为村里面的新房子建的差不多了，也饱和了。</p>

<h2>无人机喷农药</h2>

<p><img src="https://ts1.cn.mm.bing.net/th/id/R-C.f25f792f9e4ecacacaa6da55525f80d9?rik=QQjyA%2f1eY%2fgo2Q&amp;riu=http%3a%2f%2fwww.qfhkzb.com%2fUploads%2fimage%2f20190805%2f1564965385884174.jpg&amp;ehk=pRZuEOrAGmbG3prpdgy9x1BQiNgHBgGQb9aHUITD2fU%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&amp;sres=1&amp;sresct=1" alt="" /></p>

<p>村里面已经有人用上了无人机来喷农药了，是那种较大型的四翼无人机，与常见的航拍那种是一样的，只不过个头更大。运营模式是中介式的，也就是有人专门养护无人机，给农民的田地里喷农药，赚取佣金。毕竟这种大型的无人机成本较高，维护成本也很高，并且操作起来难度也不小，并不是人人都能驾驭得了的。</p>

<h2>明天会更好</h2>

<p><img src="https://tse4-mm.cn.bing.net/th/id/OIP-C.U0S--5yGkvRugBuww7MHkAHaEK?pid=ImgDet&amp;rs=1" alt="" /></p>

<p>现在国家的政策也更多的偏向广大农村地区，每年都会出台很多的惠农政策以及振兴新农村政策，因为各种不可抗力，到了基层执行效果会大打折扣，但仍相信一切都只会变得越来越好。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Understanding Minimum Viable Product]]></title>
    <link href="http://toughcoder.net/blog/2023/08/08/understanding-minimum-viable-product/"/>
    <updated>2023-08-08T22:11:11+08:00</updated>
    <id>http://toughcoder.net/blog/2023/08/08/understanding-minimum-viable-product</id>
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Minimum_viable_product">Minimum Viable Product(MVP)</a>是创业公司中比较流行的一个产品开发方法，一个比较贴切的翻译是最低可行产品，但总感觉不如英文原文有感觉。它能够帮助创业团队以最小的成本，开发出一个刚好能满足用户核心需求的产品，来验证商业逻辑是否可行。</p>

<p><a href=""><img src="https://www.agiratech.com/wp-content/uploads/2019/09/what-is-a-minimum-viable-product.jpg" title="auto auto" ></a></p>

<!-- more -->


<h2>理解MVP</h2>

<p>MVP最初由Eric Ries提出来的，它的意思是一个能够让一个团队以最少的成本（时间与金钱）来收集最多的用户的真实需求和想法。通过做出一个最基础功能的产品，并发布给用户使用，不断的接受用户的反馈，基于用户的反馈，再进行迭代。</p>

<p><img src="https://ts1.cn.mm.bing.net/th/id/R-C.537b2438249904649d41a4f5e5f952da?rik=AYTulqitQkA9CA&amp;riu=http%3a%2f%2fwww.azquotes.com%2fpicture-quotes%2fquote-the-minimum-viable-product-is-that-version-of-a-new-product-which-allows-a-team-to-collect-eric-ries-72-47-40.jpg&amp;ehk=HBGya%2bo4pC0WU1lX10ONl%2bMz4pne%2fsrzCEx3Zq4qAQM%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="" /></p>

<p>这段原文并不难，直接多读几遍去理解其内在涵义，目前并末找到一个非常贴切的翻译。</p>

<p>一个最为贴切的表达MVP精髓的图片就是那张滑板车到跑车的图片了：</p>

<p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.Sroo_DWfJfKCeSmQs5QdewHaE7?pid=ImgDet&amp;rs=1" alt="" /></p>

<h2>MVP不是什么</h2>

<p>需要特别注意的是，MVP不是产品原型，也不是软件的alpha版本。它是一个完整的产品，经过了足够的测试，足够安全，足够稳定，是符合上线发布标准的产品。从产品上来说它是『Viable』的，也即是完全可使用的，也能解决用户问题，满足用户需求的产品。精华在于『Minimum』也就是仅仅包含能满足用户核心需求的最少功能。</p>

<h2>如何做到MVP</h2>

<h3>弄清楚产品的市场定位</h3>

<p>也就是说你的产品到底是给谁使用的，必须 弄清楚。</p>

<h3>挖掘核心需求</h3>

<p>也就是你的产品到底解决了用户的什么问题。</p>

<h2>参考资料</h2>

<ul>
<li><a href="https://www.productplan.com/glossary/minimum-viable-product/">Minimum Viable Product (MVP)</a></li>
<li><a href="https://www.agilealliance.org/glossary/mvp/">What is a Minimum Viable Product (MVP)</a></li>
<li><a href="https://www.netsolutions.com/insights/how-to-build-an-mvp-minimum-viable-product-a-step-by-step-guide/">A Step-by-Step Guide to Build a Minimum Viable Product (MVP)</a></li>
<li><a href="https://www.woshipm.com/pd/879821.html">五个步骤，实现产品MVP</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/258565534">什么是MVP（最小可行性产品）？如何构建和验证MVP？</a></li>
<li><a href="https://www.minjiekaifa.com/agilearticles/mvp-prototype-proof-of-concept-80445.mhtml">MVP、原型、概念验证，傻傻分不清楚？</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1724045">5 分钟，带你了解MVP（最低可行性产品）</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Assimp安装折腾记]]></title>
    <link href="http://toughcoder.net/blog/2023/07/21/assimp-installing-troubleshooting/"/>
    <updated>2023-07-21T00:05:06+08:00</updated>
    <id>http://toughcoder.net/blog/2023/07/21/assimp-installing-troubleshooting</id>
    <content type="html"><![CDATA[<p>为了学习<a href="https://www.opengl.org/">OpenGL</a>，在学习大名鼎鼎的<a href="https://learnopengl.com/">LearnOpenGL</a>时，参考它的<a href="https://github.com/JoeyDeVries/LearnOpenGL">源码时</a>遇到了一点小小的困难，折腾了两天，感觉有必要总结一下。</p>

<p>LearnOpenGL是一个大神写的一整套关于OpenGL的资料，已出版成书，非常具有参考价值。不过它里面的示例都依赖于一些开源库，如<a href="https://github.com/assimp/assimp">assimp</a>和<a href="https://github.com/glfw/glfw">glfw</a>以及<a href="https://github.com/g-truc/glm">glm</a>等。在它的ReadMe中也都针对主流平台Windows, Linux/Unix以及Mac上面给出安装和编译教程。</p>

<p><a href=""><img src="https://ts1.cn.mm.bing.net/th/id/R-C.48d6ecd812532356af55ed7d662b4c3d?rik=TcRtYNyxFi9zYw&amp;riu=http%3a%2f%2fioshacker.com%2fwp-content%2fuploads%2f2017%2f08%2fHomebrew-mac-logo.jpg&amp;ehk=iZTgjyqdB7mHgQBwBprmXOcxPVvR%2bG9bdzmvDauON8A%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" title="auto auto" ></a></p>

<!-- more -->


<p>先在Ubuntu 22.04 LTS上面搞，按照<a href="https://github.com/JoeyDeVries/LearnOpenGL">其官方教程</a>上面说的Linux/Unix编译方法，一下子就搞定了。</p>

<p>但在Mac上面就遇到了困难。这里得说一下，我的MBP是2019年买的，系统版本是Mojave 10.14.6，现在来看是过点过时了，因为最新的稳定版本Mac OSX已经到了Ventura 10.22了，很多软件，像XCode等都已经不再提供对Mojave的支持了，平时安装软件以及一些开发库的时候也都有遇到不支持的情况。但仍不想升级，因为旧硬件升级大版本的新操作系统，往往会遇到问题，即使能升级成功，性能也大打折扣。对于电子产品，永远相信出厂的配置是最优的。可以进行小的升级，但绝不升级大版本。</p>

<p>好了，这些是背景。</p>

<h2>brew初偿败果</h2>

<p>仍是按照<a href="https://github.com/JoeyDeVries/LearnOpenGL">教程</a>在Mac上面，先是安装依赖：</p>

<pre><code class="bash">brew install cmake assimp glm glfw freetype
</code></pre>

<p>但安装依赖时出错了，以下是错误信息（很长，很长，只截取一部分）：</p>

<pre><code class="bash">Running `brew update --auto-update`...
==&gt; Auto-updated Homebrew!
Updated 1 tap (homebrew/core).

You have 3 outdated formulae installed.

Warning: You are using macOS 10.14.
We (and Apple) do not provide support for this old version.
It is expected behaviour that some formulae will fail to build in this old version.
It is expected behaviour that Homebrew will be buggy and slow.
Do not create any issues about this on Homebrew's GitHub repositories.
Do not create any issues even if you think this message is unrelated.
Any opened issues will be immediately closed without response.
Do not ask for help from Homebrew or its maintainers on social media.
You may ask for help in Homebrew's discussions but are unlikely to receive a response.
Try to figure out the problem yourself and submit a fix as a pull request.
We will review it but may or may not accept it.

==&gt; Fetching assimp
==&gt; Downloading https://github.com/assimp/assimp/commit/5a89d6fee138f8bc979b508719163a74ddc9a384.patch?full_index=1
Already downloaded: /Users/alexhilton/Library/Caches/Homebrew/downloads/af0c0eeaaca4991d7485bfb46ac1cb6209ce97489e6e4a94cb0debcaa03215cc--5a89d6fee138f8bc979b508719163a74ddc9a384.patch
==&gt; Downloading https://github.com/assimp/assimp/archive/v5.2.5.tar.gz
Already downloaded: /Users/alexhilton/Library/Caches/Homebrew/downloads/17609a79a14f9163556e55125d6e9008276ba8e8bae256242c47e9dbbb4a34d2--assimp-5.2.5.tar.gz
Warning: A newer Command Line Tools release is available.
Update them from Software Update in System Preferences.

If that doesn't show you any updates, run:
  sudo rm -rf /Library/Developer/CommandLineTools
  sudo xcode-select --install

Alternatively, manually download them from:
  https://developer.apple.com/download/all/.
You should download the Command Line Tools for Xcode 11.3.1.

==&gt; Patching
==&gt; Applying 5a89d6fee138f8bc979b508719163a74ddc9a384.patch

==&gt; cmake  -S . -B build -G Ninja -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=ON -DCMAKE_INSTALL_RPATH=@loader_
==&gt; cmake --build build
Last 15 lines from /Users/alexhilton/Library/Logs/Homebrew/assimp/02.cmake:
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:769:1: note: candidate function
abs(long double __lcpp_x) _NOEXCEPT {return ::fabsl(__lcpp_x);}
^
1 error generated.

Do not report this issue to Homebrew/brew or Homebrew/homebrew-core!

Error: You are using macOS 10.14.
We (and Apple) do not provide support for this old version.
It is expected behaviour that some formulae will fail to build in this old version.
It is expected behaviour that Homebrew will be buggy and slow.
Do not create any issues about this on Homebrew's GitHub repositories.
Do not create any issues even if you think this message is unrelated.
Any opened issues will be immediately closed without response.
Do not ask for help from Homebrew or its maintainers on social media.
You may ask for help in Homebrew's discussions but are unlikely to receive a response.
Try to figure out the problem yourself and submit a fix as a pull request.
We will review it but may or may not accept it.

Error: A newer Command Line Tools release is available.
Update them from Software Update in System Preferences.

If that doesn't show you any updates, run:
  sudo rm -rf /Library/Developer/CommandLineTools
  sudo xcode-select --install

Alternatively, manually download them from:
  https://developer.apple.com/download/all/.
You should download the Command Line Tools for Xcode 11.3.1.
</code></pre>

<p>总结起来就是一句话，你的操作系统太旧了，brew已经不支持了，自已解决吧，别向brew来报问题。。。</p>

<p>傻掉了，因为看到需要升级系统，有了放弃的想法，因为有Ubuntu上能跑就也差不多够用了，也很晚了，就休息了。</p>

<h2>尝试解决</h2>

<p>第二天，仍不想轻易放弃，想再折腾一下。因为不确定是哪个库安装失败了，所以就一个一个的单独安装。单独安装cmake, glfw, glm, freetype都成功了。就是assimp会出错，错误信息与昨晚一样。</p>

<p>它里面也有提示，说可以尝试升级一下<strong>Command Line Tools</strong>，这货是XCode带的命令行编译工具集。因为最新版本XCode已不支持Mojave了，并不会提示更新Command Line Tools，其实我的Command Line Tools已经是支持Mojave中最新的了。</p>

<p>按错误信息中的提示，强行把xcode-select重装一遍也还是出错。</p>

<p>折腾环境这条路就断了，只能找找其他方式。回到问题本身，仔细看了下错误信息，似乎是一个编译错误：</p>

<pre><code class="bash">Last 15 lines from /Users/alexhilton/Library/Logs/Homebrew/assimp/02.cmake:
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:769:1: note: candidate function
abs(long double __lcpp_x) _NOEXCEPT {return ::fabsl(__lcpp_x);}
^
1 error generated.
</code></pre>

<p>但是这个信息仍不够明确，没有指出是assimp的哪句编译出错的。</p>

<p>于是就想换条路吧，用brew不可以，那直接找assimp编译好的库，或者直接手动去编译它的源码，应该可行吧？找了一下，没找到可用的已编译好的库，于是就去手动编译assimp的源码。</p>

<h2>直接编译assimp源码</h2>

<p>把assimp源码直接下载下来，下载最新稳定版本5.2.5，这与brew的版本是一致的，然后按<a href="https://github.com/assimp/assimp/blob/master/Build.md">官程</a>编译，也出错了，但错误信息非常详细：</p>

<pre><code class="bash">➜  assimp-5.2.5 cmake --build .
[  0%] Building CXX object code/CMakeFiles/assimp.dir/Common/Assimp.cpp.o
[  0%] Building CXX object code/CMakeFiles/assimp.dir/CApi/CInterfaceIOWrapper.cpp.o
[  0%] Building CXX object code/CMakeFiles/assimp.dir/Common/Compression.cpp.o
[  1%] Building CXX object code/CMakeFiles/assimp.dir/Common/BaseImporter.cpp.o
[  1%] Building CXX object code/CMakeFiles/assimp.dir/Common/BaseProcess.cpp.o
In file included from /Users/alexhilton/opensource/assimp-5.2.5/code/Common/BaseProcess.cpp:44:
In file included from /Users/alexhilton/opensource/assimp-5.2.5/code/Common/BaseProcess.h:46:
In file included from /Users/alexhilton/opensource/assimp-5.2.5/include/assimp/GenericProperty.h:50:
/Users/alexhilton/opensource/assimp-5.2.5/include/assimp/Hash.h:99:25: error: call to 'abs' is ambiguous
                hash ^= abs(data[sizeof(uint16_t)]) &lt;&lt; 18;
                        ^~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:761:1: note: 
      candidate function
abs(float __lcpp_x) _NOEXCEPT {return ::fabsf(__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:765:1: note: 
      candidate function
abs(double __lcpp_x) _NOEXCEPT {return ::fabs(__lcpp_x);}
^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:769:1: note: 
      candidate function
abs(long double __lcpp_x) _NOEXCEPT {return ::fabsl(__lcpp_x);}
^
1 error generated.
make[2]: *** [code/CMakeFiles/assimp.dir/Common/BaseProcess.cpp.o] Error 1
make[1]: *** [code/CMakeFiles/assimp.dir/all] Error 2
make: *** [all] Error 2
</code></pre>

<p>这个编译错误比较直接，不像brew给出的不直观，可以清楚的看到是头文件include/assimp/Hash.h出错了。打开include/assimp/Hash.h查看，这只是用了一个abs函数，但引用的头文件是#include <cmath>，通过搜索找到了原因，cmath中定义了三个重载abs(float) abs(double)等。而Hash.h用的是整数，整数的abs定义是在stdlib中，也就是头文件要引用<cstdlib>。但Hash.h只引用了<cmath>，所以导致找不到整数的abs。那就简单了，直接把include/assimp/Hash.h中的头文件从cmath改成cstdlib，就可以了，再次编译，成功了。</p>

<p>看起来是个版本兼容性的问题，估计新版本的C++兼容了cmath和cstdlib，所以只引用cmath也不会出错。Anyway，这说明只是一个小小的问题，到不了放弃或者重装系统的地步。这个可以作为Plan B，如果最后用brew仍不成功，就把手动把刚编译好的库放到项目能链接 到的地方就行了。</p>

<h2>brew install assimp的折腾过程</h2>

<p>既然小修改就能成功，那么如果找到brew使用的源码包，稍加修改，不就能安装成功了么，这是值得折腾的，可以加深了解一下brew的具体过程。</p>

<p>brew是一个软件包管理工具，它会找某一个软件的最新稳定版本，如果本地未安装的话，会把其源码下载下来，打重要的patches，然后再编译，最后执行安装。</p>

<p>找到了brew会把临时文件放在HOME/Library/Caches/Homebrew下面，并且如果已下载过了就不会重新再下载源码包，太好了。于是找到assimp的源码包，解压，修改Hash.h然后再压缩。然后再运行brew install assimp，发现它确实会直接用下载好的源码 包，不会重新下载，太好了，这离成功就相当近了。</p>

<p>但，还是会报错，它会对源码包做校验，为了防止源码包被篡改，当然需要做校验了。</p>

<pre><code class="bash">==&gt; Fetching assimp
==&gt; Downloading https://github.com/assimp/assimp/commit/5a89d6fee138f8bc979b508719163a74ddc9a384.patch?full_index=1
Already downloaded: /Users/alexhilton/Library/Caches/Homebrew/downloads/af0c0eeaaca4991d7485bfb46ac1cb6209ce97489e6e4a94cb0debcaa03215cc--5a89d6fee138f8bc979b508719163a74ddc9a384.patch
==&gt; Downloading https://github.com/assimp/assimp/archive/v5.2.5.tar.gz
Already downloaded: /Users/alexhilton/Library/Caches/Homebrew/downloads/17609a79a14f9163556e55125d6e9008276ba8e8bae256242c47e9dbbb4a34d2--assimp-5.2.5.tar.gz
Error: assimp: SHA256 mismatch
Expected: b5219e63ae31d895d60d98001ee5bb809fb2c7b2de1e7f78ceeb600063641e1a
  Actual: b99489f8d142769dda720f4d250da31214efad3460f92b3d3ec71919de196dd1
    File: /Users/alexhilton/Library/Caches/Homebrew/downloads/17609a79a14f9163556e55125d6e9008276ba8e8bae256242c47e9dbbb4a34d2--assimp-5.2.5.tar.gz
To retry an incomplete download, remove the file above.
</code></pre>

<p>这也好办，得到我们修改过的压缩包的sha256的值，然后想办法找到校验配置的文件，改一下就可以了。试了下，未成功，估计校验文件配置会被brew覆盖掉。</p>

<p>然后发现，brew有跳过校验的方法，运行brew edit assimp会出现关于assimp的一些meta信息，把sha256的值改一下，改成我们修改后的就可以了，然后就安装成功了。</p>

<h2>总结</h2>

<p>还是要找到问题的根因，多从源码出发进行hack，然后解决问题。像这个问题，一开始安装一坨依赖的时候失败了，这时就要一个一个的安装，然后看是哪个失败了。先把成功的装上，留下失败的这个慢慢解决。然后就要找到它编译失败的根本原因。如果brew安装的错误信息不够明确，那么就要直接去找它的源码，然后手动编译，看出错在哪里，这时一般能够发现问题，一般来说都是一些编译器版本兼容的小问题，这本身也能当作Plan B，因为可以手动安装。</p>

<p>之后就是要研究一下包管理工具的工作流程，看能否修改它使用的源码包，然后一一把流程跑通就可以了。</p>

<p>切忌不要一上来就轻易的去升级电脑，先尝试解决软件包本身，而不是去改运行环境，流行的开源库兼容性会很好，通常都只会是一些小的兼容问题，不要轻易的去改电脑本身的运行环境。</p>

<h2>参考</h2>

<ul>
<li><a href="https://github.com/assimp/assimp/blob/master/Build.md">Assimp Build</a></li>
<li><a href="https://github.com/JoeyDeVries/LearnOpenGL">LearnOpenGL</a></li>
<li><a href="https://stackoverflow.com/questions/19208607/homebrew-force-install-even-with-sha1-mismatch">homebrew - force install even with SHA1 mismatch</a></li>
<li><a href="https://stackoverflow.com/questions/4800588/modifying-the-source-code-of-a-home-brew-package">Modifying the source code of a home brew package</a></li>
<li><a href="https://stackoverflow.com/questions/56978365/how-to-fix-error-call-to-abs-is-ambiguous">How to fix &ldquo;error: call to &lsquo;abs&rsquo; is ambiguous&rdquo;</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[悼念耗子叔]]></title>
    <link href="http://toughcoder.net/blog/2023/05/16/mourn-mr-hao-chen/"/>
    <updated>2023-05-16T10:03:45+08:00</updated>
    <id>http://toughcoder.net/blog/2023/05/16/mourn-mr-hao-chen</id>
    <content type="html"><![CDATA[<p>惊闻<a href="https://coolshell.cn/haoel">耗子叔</a>突然辞世，悲伤不已。仍活跃在一线的技术大神，前几天仍在社交网络上活跃的大牛，突然就这么走了，犹如一首高亢激昂的交响乐曲，嘎然而止，亦如波涛奔涌的大江，瞬间冰封，不免让人心痛，亦会唏嘘感慨生命的短暂。</p>

<p><a href=""><img src="https://coolshell.cn/wp-content/uploads/2011/03/me.jpg"></a></p>

<!-- more -->


<p>早年就曾关注耗子叔，并成为<a href="https://coolshell.cn/">其博客</a>的忠实读者，但如果非硬要扯上关系，也曾做过同事，2015年初我去了大阿里，彼时耗子叔仍在阿里，记得彼时耗子叔经常分享一些国际巨头（谷歌，亚马逊）的一些高效的工作模式，先进的技术迭代方式，在阿里味引起了不小的反响。</p>

<p>耗子叔是一个技术布道者，对技术有着极度热情和坚定的信仰，写了大量的优质博客，影响了无数人，是很多年轻人的良师益友。他常说的两句话是：学无止境，以及年轻人要多到大平台大公司去开阔眼界。个人最受影响的便是他那篇著名的博客<a href="https://coolshell.cn/articles/4990.html">程序员技术练级攻略</a>，这篇文章的影响力可比肩<a href="https://norvig.com/">Peter Norvig</a>大神的那篇著名的<a href="https://norvig.com/21-days.html">Teach Yourself Programming in Ten Years</a>。</p>

<p>耗子叔起步不高，却大器晚成，是勤奋成材的典范，是学无止境的标兵，坚定的信仰着技术改变世界，并为之奋斗，为技术布道，并追求极致的工程师文化。相信如果耗子叔起点高一些，或者再多给他一些时间，他的成就会更高，至少能达到巨头公司副总的级别。</p>

<p>现今社会职场压力大，特别是IT行业内卷极其严重，小则996，大则007，耗子叔以及很多嘎然而止的鲜活生命也都在提醒着我们要多多运动，关注身心健康，正所谓前面那个1倒下了，后面再多的0都是徒劳。</p>

<p>愿耗子叔能安息，也愿天堂有纯正的技术氛围和极致的工程师文化。</p>


]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Table Tennis Road Map]]></title>
    <link href="http://toughcoder.net/blog/2023/02/22/table-tennis-road-map/"/>
    <updated>2023-02-22T21:28:33+08:00</updated>
    <id>http://toughcoder.net/blog/2023/02/22/table-tennis-road-map</id>
    <content type="html"><![CDATA[<p>乒乓球可以锻炼反应能力，运动量适中，场地要求不高，能放下球台就能玩，人数要求也不高，二个人就能玩，所以非常适合中老年人，打了一段时间感觉良好，但乱打还是不行的，需要好好入门，然后再慢慢提高。</p>

<p><a href=""><img src="https://www.athens2020.org/sites/default/files/styles/fullhd/public/disciplines-table-tennis.jpg?itok=tgR2uDF5" title="auto auto" ></a></p>

<!-- more -->


<p>注意，所有的动作均以右手横板为基准，因为尝试了各种手法，横板是最为舒服的，因此决定用横板。</p>

<h2>乒乓球核心要点</h2>

<p>其实乒乓球不难，但基础的东西一定要对，否则会养成不好的习惯，而一旦形成习惯了就很难改，所以从最开始，基本的动作都要按照 标准的来，打下良好的基础后，后续提高才会更顺利。</p>

<h3>放松，舒服</h3>

<p>运动一定是符合身体的自然规律的，所以一定要做到放松和舒服，凡是不舒服不放松就违被了自然规律，就一定是错的，不但效果不好，而且会去身体造成伤害。</p>

<p>比如站位，是又脚自然分开，一前一后，在中间偏左一点（惯用右手，横板），身体略向前。肩要放松，手腕肘都要放松，千万不能端着肩，提着肘，或者全身都绷的很紧，这是错误的。运动的规律都是在发力（击球时）的时候，是紧的，是端的，但绝大部分时间都是要自然放松，所有运动都是如此。</p>

<p>引拍，挥拍也要适度，让肘和手以身体为轴心自然的去旋转，而不要过度的引后（向后甩的太远），过度的挥拍（向前挥的太远）这都是不对的。</p>

<p>包括握拍，也要松紧适度，不用太紧的捏着，只有击球时需要握紧，不然容易飞出去，其余大部分时间，都是拿住拍子即可，只要拍不从手上掉下来即可，不用太紧，要放松，要自然。</p>

<p>时刻想着自然和舒服，始终处于一种自然和放松的状态。</p>

<h3>以身体为轴，用腰转动发力</h3>

<p>乒乓球的主要动作引拍和挥拍，都是以身体为轴，通过转动腰来进行，手腕，肘和肩都是不动的。向后转身，即是引拍，向前转身即是挥拍。</p>

<p>要仔细体会这个要领，用腰的转动来实现引拍和挥拍，身体的各个部位都没有位移，只有转动。</p>

<h3>重心轮换</h3>

<p>两脚 自然分开，略比肩宽，一前一后，重心随着身体的转动而不停在两脚 之间切换。正常时重心在左脚上，引拍时，向后转动，重心到了右脚上，向前转身，挥拍击球，重心又回到左脚 上，然后再向后转心，还原动作。</p>

<h3>还原动作，专注于球，提前调整位置</h3>

<p>击球后，要立刻还原动作，然后专注于球，预判球的方位，远近，然后调整位置，同时引拍，准备击球。</p>

<h2>具体技术要点</h2>

<ol>
<li>站位，站在中线的左边，身体不能超过中线</li>
<li>左脚在前，右脚 在后，重心在左脚上，两脚略比肩宽，身体略前倾</li>
<li>肩放松，肘放松，腕放松，手放松，不能端着，不能紧绷着，要放松</li>
<li>不要抬肘，一定不能抬肘，要自然放松</li>
<li>拍子，腕，肘要成一个直线，拍了向前斜，与台面约45度角</li>
<li>球在身体右边，用正手攻球，就是向右后转身，引拍，击球，然后还原</li>
<li>球在身体左边，用反手攻球，向左后转身，引拍，击求，然后还原</li>
<li>想要击球有力度，就引拍幅度大一些，力量靠身休转动的角度发出来的，而不是肘或者手腕（身体是轴心，手臂是半径，转动角度越大，产生的力矩就越大）</li>
<li>拍子要始终与台面形成斜角，这样击球才会有旋转，并且球会速度快且向下飞，而不是速度慢向上飞（那就被挑起来了，会被对方狠拍杀死），球要越旋越好，越低越好，越快越好。所以，拍子要压低与台面的斜角，角度越小越好。</li>
</ol>


<p><img src="https://so1.360tres.com/t014e6a3a2efc70251f.jpg" alt="" />
所以，总结 起来，其实乒乓球就两个主要动作，向右后转身，然后还原（正手攻球）；向左后转身，然后还原（反手攻球），不打球时，也可以练习这些基本动作。
<img src="https://file.zhibo.tv/uploads/imgs/2021/06-07/1623061996619420_2606x1817.jpg" alt="" /></p>

<h2>四大打法</h2>

<h3>抽</h3>

<p>拍子向前斜，与台面呈斜角，从下向上击球，这是抽，正手攻球，反手基本都是抽。引拍幅度要大一些，球拍角度要圧低一些，这样回球力度大，速度快，旋转好，高度低。打出来的都是上旋球。</p>

<p>适合长球，球在台面外，球下落时，从下向上抽。</p>

<h3>推</h3>

<p>拍子，稍向前斜，比抽时斜角要大，几乎快直立。拍子不动，手腕不动，是整个手臂（肘，腕和拍）整体向前推，推的过程中拍子腕和肘仍呈直线，相对位置不变，是整体向前推。</p>

<p>适合，反手时，球比较高，球在台面上，球速也不快时，把球推回对方。当然 也有快推和慢推，但整体差别不大，打出来的球也基本没旋转，球速也不快，也很高。很容易被对方直接快速抽回来。</p>

<h3>削</h3>

<p>拍向后斜，从上向下击球，这是削。打出来的是下旋球
<img src="https://www.ttline.cn/uploadfile/ueditor/image/2022/02/4085168991547474880.jpg" alt="" />
适合球比较高时，在台面上，或者在台面外都可以，但一定要比较高。</p>

<h3>搓</h3>

<p>拍子向下斜，与台面的斜角是负的，基本是直着向前搓球。</p>

<p><img src="https://tse3-mm.cn.bing.net/th/id/OIP-C.-yw5SLZUxW0Tgg88poSb-QHaE8?pid=ImgDet&amp;rs=1" alt="" /></p>

<p>适合台内的短球。搓出来的也是下旋球。</p>
]]></content>
  </entry>
  
</feed>
